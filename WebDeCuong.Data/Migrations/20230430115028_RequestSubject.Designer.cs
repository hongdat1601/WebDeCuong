// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebDeCuong.Data;

#nullable disable

namespace WebDeCuong.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230430115028_RequestSubject")]
    partial class RequestSubject
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "dda0b807-a9ea-44af-b353-167038c65d2c",
                            ConcurrencyStamp = "dda0b807-a9ea-44af-b353-167038c65d2c",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "dd1ef747-7efb-4afc-ae32-dcb20e5480a4",
                            ConcurrencyStamp = "dd1ef747-7efb-4afc-ae32-dcb20e5480a4",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "47b21a7a-7183-4502-a26d-c7cb9f71f537",
                            RoleId = "dd1ef747-7efb-4afc-ae32-dcb20e5480a4"
                        },
                        new
                        {
                            UserId = "02e989ea-81aa-4019-987e-b703bde09d19",
                            RoleId = "dda0b807-a9ea-44af-b353-167038c65d2c"
                        },
                        new
                        {
                            UserId = "9b6a9810-16e1-4c19-bb7c-a39d5ad12ab3",
                            RoleId = "dda0b807-a9ea-44af-b353-167038c65d2c"
                        },
                        new
                        {
                            UserId = "e1ccf146-c8d4-4e38-baef-42ccf3850439",
                            RoleId = "dda0b807-a9ea-44af-b353-167038c65d2c"
                        },
                        new
                        {
                            UserId = "eb363398-dbc6-46fb-b264-cdc07e8524be",
                            RoleId = "dda0b807-a9ea-44af-b353-167038c65d2c"
                        },
                        new
                        {
                            UserId = "7b56b6b7-9920-456f-8fb7-fc1fa7840638",
                            RoleId = "dda0b807-a9ea-44af-b353-167038c65d2c"
                        },
                        new
                        {
                            UserId = "8f10c35c-85b8-490c-a781-b18e1153209d",
                            RoleId = "dda0b807-a9ea-44af-b353-167038c65d2c"
                        },
                        new
                        {
                            UserId = "8509d33d-f7a6-4371-91f0-6e183ff58cd6",
                            RoleId = "dda0b807-a9ea-44af-b353-167038c65d2c"
                        },
                        new
                        {
                            UserId = "f6113f68-18f3-465a-a929-21e433760178",
                            RoleId = "dda0b807-a9ea-44af-b353-167038c65d2c"
                        },
                        new
                        {
                            UserId = "05c9aa35-200a-4879-a954-f1f44da52637",
                            RoleId = "dda0b807-a9ea-44af-b353-167038c65d2c"
                        },
                        new
                        {
                            UserId = "92eceb0f-5478-419b-93a2-91c7b35469a5",
                            RoleId = "dda0b807-a9ea-44af-b353-167038c65d2c"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Faculty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PlaceOfBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "47b21a7a-7183-4502-a26d-c7cb9f71f537",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "405c5595-1cf8-40ea-9baf-4d518cb07a36",
                            DateOfBirth = new DateTime(2023, 4, 30, 18, 50, 27, 373, DateTimeKind.Local).AddTicks(8698),
                            Email = "admin@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Khoa học máy tính",
                            FullName = "Nguyễn Văn A",
                            Gender = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAED/72bz5YPT9ugW4dPXvYfZbKlKUPJSTVmKx+BsnFFe7DrV9yJrdjzT2Xtf93HtgDQ==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "91b354d5-4928-4c55-a470-be0e88533a8f",
                            TwoFactorEnabled = false,
                            UserName = "admin@gmail.com"
                        },
                        new
                        {
                            Id = "02e989ea-81aa-4019-987e-b703bde09d19",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4182fb23-aecf-4ba9-9dcb-5507b9db69de",
                            DateOfBirth = new DateTime(2023, 4, 30, 18, 50, 27, 473, DateTimeKind.Local).AddTicks(9859),
                            Email = "user0@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_0",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER0@GMAIL.COM",
                            NormalizedUserName = "USER0@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEHoX8tLyfuhZfQavPpBkvRboDHMqK7pnn36hDmAp0F/WRvoQSR0ZM4y6fRAX47NTJg==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "849310d8-5354-4893-81f4-7fb069e585cd",
                            TwoFactorEnabled = false,
                            UserName = "user0@gmail.com"
                        },
                        new
                        {
                            Id = "9b6a9810-16e1-4c19-bb7c-a39d5ad12ab3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8d8fa2b1-80d3-445f-93e2-ac0d43fcd2cc",
                            DateOfBirth = new DateTime(2023, 4, 30, 18, 50, 27, 578, DateTimeKind.Local).AddTicks(8320),
                            Email = "user1@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_1",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER1@GMAIL.COM",
                            NormalizedUserName = "USER1@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEFTSh8puRWvWPQ5Zw504kFZIjFhuDbTbG3rOMgawuA7nht5dihV8xZ3lg6HzeS8esQ==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "d0ac3639-bc57-48a1-9f67-11c67f3b9256",
                            TwoFactorEnabled = false,
                            UserName = "user1@gmail.com"
                        },
                        new
                        {
                            Id = "e1ccf146-c8d4-4e38-baef-42ccf3850439",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f0e58500-6c95-4751-8dcf-891dab9d06d4",
                            DateOfBirth = new DateTime(2023, 4, 30, 18, 50, 27, 724, DateTimeKind.Local).AddTicks(7758),
                            Email = "user2@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_2",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER2@GMAIL.COM",
                            NormalizedUserName = "USER2@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEMpLuycnR7IVMTKSk03HSM2/ZpKkXu1G9yEmWbAGOtOpTgc7bAM86durgdl0u4J5cg==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "a54c91be-fda6-43dc-89f1-18179c864655",
                            TwoFactorEnabled = false,
                            UserName = "user2@gmail.com"
                        },
                        new
                        {
                            Id = "eb363398-dbc6-46fb-b264-cdc07e8524be",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "513423f9-c8e4-4268-8aa3-e834698367f7",
                            DateOfBirth = new DateTime(2023, 4, 30, 18, 50, 27, 844, DateTimeKind.Local).AddTicks(3202),
                            Email = "user3@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_3",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER3@GMAIL.COM",
                            NormalizedUserName = "USER3@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEMF1cMhMeIkO/V4tKn7vraaEQcm6l0yK3Y/uUK4mzbUoV2WfK7aUa0wcwyqByKNUIA==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "b0905ca8-e006-4f91-b861-1025935676a5",
                            TwoFactorEnabled = false,
                            UserName = "user3@gmail.com"
                        },
                        new
                        {
                            Id = "7b56b6b7-9920-456f-8fb7-fc1fa7840638",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "89de9de8-e9fb-40cc-825d-dccf20e746e4",
                            DateOfBirth = new DateTime(2023, 4, 30, 18, 50, 27, 966, DateTimeKind.Local).AddTicks(8311),
                            Email = "user4@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_4",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER4@GMAIL.COM",
                            NormalizedUserName = "USER4@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEG4TDBJhC8dHpIdhyL1V6S+sqAUUZ8qAph2lWt6v2ezmRrr3zalH0c3pK2JsK4lckQ==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "c4c03b30-1102-451a-907c-4cc7ae9ad7bd",
                            TwoFactorEnabled = false,
                            UserName = "user4@gmail.com"
                        },
                        new
                        {
                            Id = "8f10c35c-85b8-490c-a781-b18e1153209d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "77881183-643c-4650-9b40-5e148280f9d1",
                            DateOfBirth = new DateTime(2023, 4, 30, 18, 50, 28, 80, DateTimeKind.Local).AddTicks(1863),
                            Email = "user5@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_5",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER5@GMAIL.COM",
                            NormalizedUserName = "USER5@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAENa49ihYPPGa1vxwBdWGQqs/nvsyTEtE54cTxksij8MucTBl8zv/luQeVhjIRnptlA==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "65fad648-ac2a-4585-90c4-cafe527aacde",
                            TwoFactorEnabled = false,
                            UserName = "user5@gmail.com"
                        },
                        new
                        {
                            Id = "8509d33d-f7a6-4371-91f0-6e183ff58cd6",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "283ccb34-893e-409c-8b56-897adbfcb469",
                            DateOfBirth = new DateTime(2023, 4, 30, 18, 50, 28, 179, DateTimeKind.Local).AddTicks(9745),
                            Email = "user6@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_6",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER6@GMAIL.COM",
                            NormalizedUserName = "USER6@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEKiiMzWcAUPRyJUl7FioP1PYVfRdfDkJR2wZ9Imv9k7zjrH0tabA8nOCQ5NG2y9lMQ==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "50c98096-4d4f-47dd-9b86-99c67a4d974a",
                            TwoFactorEnabled = false,
                            UserName = "user6@gmail.com"
                        },
                        new
                        {
                            Id = "f6113f68-18f3-465a-a929-21e433760178",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4ac3dfd9-e8c9-4def-b6f0-d4bfe0cfb3f0",
                            DateOfBirth = new DateTime(2023, 4, 30, 18, 50, 28, 295, DateTimeKind.Local).AddTicks(7297),
                            Email = "user7@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_7",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER7@GMAIL.COM",
                            NormalizedUserName = "USER7@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEAazOxkxVed0AhcQMaMkQBYZVpjDyi1y5SjiM5nQEdipP5vqfkRT03pR3mljXy+8CA==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "df334723-574b-4264-abff-eaece51bd12b",
                            TwoFactorEnabled = false,
                            UserName = "user7@gmail.com"
                        },
                        new
                        {
                            Id = "05c9aa35-200a-4879-a954-f1f44da52637",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6040aa99-edea-4063-849d-fbaa2fa29fa7",
                            DateOfBirth = new DateTime(2023, 4, 30, 18, 50, 28, 407, DateTimeKind.Local).AddTicks(7096),
                            Email = "user8@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_8",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER8@GMAIL.COM",
                            NormalizedUserName = "USER8@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEKZcEXY0HWhHdXtmYB6GwoPalDGSsWGOuI2saIJnnA2FNIovHI+vgAuGCgC1IPsg9Q==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "96bc85ee-fa42-4b4a-b3ca-1b861fd89a2a",
                            TwoFactorEnabled = false,
                            UserName = "user8@gmail.com"
                        },
                        new
                        {
                            Id = "92eceb0f-5478-419b-93a2-91c7b35469a5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "246f403c-27f7-4cf4-8ba1-f917534c5241",
                            DateOfBirth = new DateTime(2023, 4, 30, 18, 50, 28, 532, DateTimeKind.Local).AddTicks(4862),
                            Email = "user9@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_9",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER9@GMAIL.COM",
                            NormalizedUserName = "USER9@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEIK9z8Jut7uJuXMQlNwBpYGOuP1wKHmyOK4RTB6n7bLfKtlh8oa53+J2vlh7h+ceJw==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "fe447a26-d80f-4ee7-8cc1-25f05b40c83f",
                            TwoFactorEnabled = false,
                            UserName = "user9@gmail.com"
                        });
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Curriculum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Curriculums");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.EvalElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("Proportion")
                        .HasColumnType("int");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("EvalElements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 1,
                            Proportion = 20,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 2,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 2,
                            Proportion = 20,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 3,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 3,
                            Proportion = 20,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 4,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 4,
                            Proportion = 20,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 5,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 5,
                            Proportion = 20,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 6,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 1,
                            Proportion = 20,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 7,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 2,
                            Proportion = 20,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 8,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 3,
                            Proportion = 20,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 9,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 4,
                            Proportion = 20,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 10,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 5,
                            Proportion = 20,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 11,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 1,
                            Proportion = 20,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 12,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 2,
                            Proportion = 20,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 13,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 3,
                            Proportion = 20,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 14,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 4,
                            Proportion = 20,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 15,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 5,
                            Proportion = 20,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 16,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 1,
                            Proportion = 20,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 17,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 2,
                            Proportion = 20,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 18,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 3,
                            Proportion = 20,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 19,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 4,
                            Proportion = 20,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 20,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 5,
                            Proportion = 20,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 21,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 1,
                            Proportion = 20,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 22,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 2,
                            Proportion = 20,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 23,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 3,
                            Proportion = 20,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 24,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 4,
                            Proportion = 20,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 25,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 5,
                            Proportion = 20,
                            SubjectId = "0000005"
                        });
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Evaluate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Clo")
                        .HasColumnType("int");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("Proportion")
                        .HasColumnType("int");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Target")
                        .HasColumnType("int");

                    b.Property<string>("Test")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Evaluates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Clo = 1,
                            Method = "Thi viet",
                            Order = 1,
                            Proportion = 100,
                            SubjectId = "0000001",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 2,
                            Clo = 2,
                            Method = "Thi viet",
                            Order = 2,
                            Proportion = 100,
                            SubjectId = "0000001",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 3,
                            Clo = 3,
                            Method = "Thi viet",
                            Order = 3,
                            Proportion = 100,
                            SubjectId = "0000001",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 4,
                            Clo = 4,
                            Method = "Thi viet",
                            Order = 4,
                            Proportion = 100,
                            SubjectId = "0000001",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 5,
                            Clo = 5,
                            Method = "Thi viet",
                            Order = 5,
                            Proportion = 100,
                            SubjectId = "0000001",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 6,
                            Clo = 1,
                            Method = "Thi viet",
                            Order = 1,
                            Proportion = 100,
                            SubjectId = "0000002",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 7,
                            Clo = 2,
                            Method = "Thi viet",
                            Order = 2,
                            Proportion = 100,
                            SubjectId = "0000002",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 8,
                            Clo = 3,
                            Method = "Thi viet",
                            Order = 3,
                            Proportion = 100,
                            SubjectId = "0000002",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 9,
                            Clo = 4,
                            Method = "Thi viet",
                            Order = 4,
                            Proportion = 100,
                            SubjectId = "0000002",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 10,
                            Clo = 5,
                            Method = "Thi viet",
                            Order = 5,
                            Proportion = 100,
                            SubjectId = "0000002",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 11,
                            Clo = 1,
                            Method = "Thi viet",
                            Order = 1,
                            Proportion = 100,
                            SubjectId = "0000003",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 12,
                            Clo = 2,
                            Method = "Thi viet",
                            Order = 2,
                            Proportion = 100,
                            SubjectId = "0000003",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 13,
                            Clo = 3,
                            Method = "Thi viet",
                            Order = 3,
                            Proportion = 100,
                            SubjectId = "0000003",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 14,
                            Clo = 4,
                            Method = "Thi viet",
                            Order = 4,
                            Proportion = 100,
                            SubjectId = "0000003",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 15,
                            Clo = 5,
                            Method = "Thi viet",
                            Order = 5,
                            Proportion = 100,
                            SubjectId = "0000003",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 16,
                            Clo = 1,
                            Method = "Thi viet",
                            Order = 1,
                            Proportion = 100,
                            SubjectId = "0000004",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 17,
                            Clo = 2,
                            Method = "Thi viet",
                            Order = 2,
                            Proportion = 100,
                            SubjectId = "0000004",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 18,
                            Clo = 3,
                            Method = "Thi viet",
                            Order = 3,
                            Proportion = 100,
                            SubjectId = "0000004",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 19,
                            Clo = 4,
                            Method = "Thi viet",
                            Order = 4,
                            Proportion = 100,
                            SubjectId = "0000004",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 20,
                            Clo = 5,
                            Method = "Thi viet",
                            Order = 5,
                            Proportion = 100,
                            SubjectId = "0000004",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 21,
                            Clo = 1,
                            Method = "Thi viet",
                            Order = 1,
                            Proportion = 100,
                            SubjectId = "0000005",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 22,
                            Clo = 2,
                            Method = "Thi viet",
                            Order = 2,
                            Proportion = 100,
                            SubjectId = "0000005",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 23,
                            Clo = 3,
                            Method = "Thi viet",
                            Order = 3,
                            Proportion = 100,
                            SubjectId = "0000005",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 24,
                            Clo = 4,
                            Method = "Thi viet",
                            Order = 4,
                            Proportion = 100,
                            SubjectId = "0000005",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 25,
                            Clo = 5,
                            Method = "Thi viet",
                            Order = 5,
                            Proportion = 100,
                            SubjectId = "0000005",
                            Target = 75,
                            Test = "Bai kiem tra"
                        });
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Semester", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Semesters");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Subject", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("A")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Abstract")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("B")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("C")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Documents")
                        .HasColumnType("text");

                    b.Property<string>("Goals")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Other")
                        .HasColumnType("text");

                    b.Property<int>("PracticeCredits")
                        .HasColumnType("int");

                    b.Property<string>("RequestUserMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SelfLearningCredits")
                        .HasColumnType("int");

                    b.Property<string>("Teachers")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TheoryCredits")
                        .HasColumnType("int");

                    b.Property<int>("TotalCredits")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = "0000001",
                            Abstract = "Day la phan tom tat hoc phan",
                            Documents = "Tai lieu 1\nTai Lieu 2\nTai Lieu 3",
                            Goals = "Muc tieu 1\nMuc tieu 2\nMuc tieu 3",
                            Name = "Subject 1",
                            PracticeCredits = 0,
                            SelfLearningCredits = 0,
                            Teachers = "Teacher 1\nTeacher 2\nTeacher3",
                            TheoryCredits = 0,
                            TotalCredits = 0
                        },
                        new
                        {
                            Id = "0000002",
                            Abstract = "Day la phan tom tat hoc phan",
                            Documents = "Tai lieu 1\nTai Lieu 2\nTai Lieu 3",
                            Goals = "Muc tieu 1\nMuc tieu 2\nMuc tieu 3",
                            Name = "Subject 2",
                            PracticeCredits = 0,
                            SelfLearningCredits = 0,
                            Teachers = "Teacher 1\nTeacher 2\nTeacher3",
                            TheoryCredits = 0,
                            TotalCredits = 0
                        },
                        new
                        {
                            Id = "0000003",
                            Abstract = "Day la phan tom tat hoc phan",
                            Documents = "Tai lieu 1\nTai Lieu 2\nTai Lieu 3",
                            Goals = "Muc tieu 1\nMuc tieu 2\nMuc tieu 3",
                            Name = "Subject 3",
                            PracticeCredits = 0,
                            SelfLearningCredits = 0,
                            Teachers = "Teacher 1\nTeacher 2\nTeacher3",
                            TheoryCredits = 0,
                            TotalCredits = 0
                        },
                        new
                        {
                            Id = "0000004",
                            Abstract = "Day la phan tom tat hoc phan",
                            Documents = "Tai lieu 1\nTai Lieu 2\nTai Lieu 3",
                            Goals = "Muc tieu 1\nMuc tieu 2\nMuc tieu 3",
                            Name = "Subject 4",
                            PracticeCredits = 0,
                            SelfLearningCredits = 0,
                            Teachers = "Teacher 1\nTeacher 2\nTeacher3",
                            TheoryCredits = 0,
                            TotalCredits = 0
                        },
                        new
                        {
                            Id = "0000005",
                            Abstract = "Day la phan tom tat hoc phan",
                            Documents = "Tai lieu 1\nTai Lieu 2\nTai Lieu 3",
                            Goals = "Muc tieu 1\nMuc tieu 2\nMuc tieu 3",
                            Name = "Subject 5",
                            PracticeCredits = 0,
                            SelfLearningCredits = 0,
                            Teachers = "Teacher 1\nTeacher 2\nTeacher3",
                            TheoryCredits = 0,
                            TotalCredits = 0
                        });
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bonus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Clos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NLessons")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("SubjectContents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 1,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 2,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 2,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 3,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 3,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 4,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 4,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 5,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 5,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 6,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 1,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 7,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 2,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 8,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 3,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 9,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 4,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 10,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 5,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 11,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 1,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 12,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 2,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 13,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 3,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 14,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 4,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 15,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 5,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 16,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 1,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 17,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 2,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 18,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 3,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 19,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 4,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 20,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 5,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 21,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 1,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 22,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 2,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 23,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 3,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 24,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 4,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 25,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 5,
                            SubjectId = "0000005"
                        });
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectCurriculum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CurriculumId")
                        .HasColumnType("int");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CurriculumId");

                    b.HasIndex("SemesterId");

                    b.HasIndex("SubjectId");

                    b.ToTable("SubjectCurriculums");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectOutputStandard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Clo")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoPerPi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("SubjectOutputStandards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Clo = 1,
                            Content = "Dau ra 1",
                            SoPerPi = "Text",
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 2,
                            Clo = 2,
                            Content = "Dau ra 2",
                            SoPerPi = "Text",
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 3,
                            Clo = 3,
                            Content = "Dau ra 3",
                            SoPerPi = "Text",
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 4,
                            Clo = 4,
                            Content = "Dau ra 4",
                            SoPerPi = "Text",
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 5,
                            Clo = 5,
                            Content = "Dau ra 5",
                            SoPerPi = "Text",
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 6,
                            Clo = 1,
                            Content = "Dau ra 1",
                            SoPerPi = "Text",
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 7,
                            Clo = 2,
                            Content = "Dau ra 2",
                            SoPerPi = "Text",
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 8,
                            Clo = 3,
                            Content = "Dau ra 3",
                            SoPerPi = "Text",
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 9,
                            Clo = 4,
                            Content = "Dau ra 4",
                            SoPerPi = "Text",
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 10,
                            Clo = 5,
                            Content = "Dau ra 5",
                            SoPerPi = "Text",
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 11,
                            Clo = 1,
                            Content = "Dau ra 1",
                            SoPerPi = "Text",
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 12,
                            Clo = 2,
                            Content = "Dau ra 2",
                            SoPerPi = "Text",
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 13,
                            Clo = 3,
                            Content = "Dau ra 3",
                            SoPerPi = "Text",
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 14,
                            Clo = 4,
                            Content = "Dau ra 4",
                            SoPerPi = "Text",
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 15,
                            Clo = 5,
                            Content = "Dau ra 5",
                            SoPerPi = "Text",
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 16,
                            Clo = 1,
                            Content = "Dau ra 1",
                            SoPerPi = "Text",
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 17,
                            Clo = 2,
                            Content = "Dau ra 2",
                            SoPerPi = "Text",
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 18,
                            Clo = 3,
                            Content = "Dau ra 3",
                            SoPerPi = "Text",
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 19,
                            Clo = 4,
                            Content = "Dau ra 4",
                            SoPerPi = "Text",
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 20,
                            Clo = 5,
                            Content = "Dau ra 5",
                            SoPerPi = "Text",
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 21,
                            Clo = 1,
                            Content = "Dau ra 1",
                            SoPerPi = "Text",
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 22,
                            Clo = 2,
                            Content = "Dau ra 2",
                            SoPerPi = "Text",
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 23,
                            Clo = 3,
                            Content = "Dau ra 3",
                            SoPerPi = "Text",
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 24,
                            Clo = 4,
                            Content = "Dau ra 4",
                            SoPerPi = "Text",
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 25,
                            Clo = 5,
                            Content = "Dau ra 5",
                            SoPerPi = "Text",
                            SubjectId = "0000005"
                        });
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.HasIndex("UserId");

                    b.ToTable("SubjectUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebDeCuong.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.EvalElement", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.Subject", "Subject")
                        .WithMany("EvalElements")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Evaluate", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.Subject", "Subject")
                        .WithMany("Evaluates")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectContent", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.Subject", "Subject")
                        .WithMany("SubjectContents")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectCurriculum", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.Curriculum", "Curriculum")
                        .WithMany("SubjectCurriculum")
                        .HasForeignKey("CurriculumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebDeCuong.Data.Entities.Semester", "Semester")
                        .WithMany("SubjectCurriculum")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebDeCuong.Data.Entities.Subject", "Subject")
                        .WithMany("SubjectCurriculum")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curriculum");

                    b.Navigation("Semester");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectOutputStandard", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.Subject", "Subject")
                        .WithMany("SubjectOutputStandards")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectUser", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.Subject", "Subject")
                        .WithMany("SubjectUsers")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebDeCuong.Data.Entities.ApplicationUser", "User")
                        .WithMany("SubjectUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.ApplicationUser", b =>
                {
                    b.Navigation("SubjectUsers");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Curriculum", b =>
                {
                    b.Navigation("SubjectCurriculum");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Semester", b =>
                {
                    b.Navigation("SubjectCurriculum");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Subject", b =>
                {
                    b.Navigation("EvalElements");

                    b.Navigation("Evaluates");

                    b.Navigation("SubjectContents");

                    b.Navigation("SubjectCurriculum");

                    b.Navigation("SubjectOutputStandards");

                    b.Navigation("SubjectUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
