// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebDeCuong.Data;

#nullable disable

namespace WebDeCuong.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230502131950_InitDb")]
    partial class InitDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "a26cf27d-a917-47a7-91e5-ecd8f7263671",
                            ConcurrencyStamp = "a26cf27d-a917-47a7-91e5-ecd8f7263671",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "868f560d-7b60-4d96-a02d-deeb33ae9b2a",
                            ConcurrencyStamp = "868f560d-7b60-4d96-a02d-deeb33ae9b2a",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "19692afb-fbc3-40f4-8aa5-66ef2ec2e4e5",
                            RoleId = "868f560d-7b60-4d96-a02d-deeb33ae9b2a"
                        },
                        new
                        {
                            UserId = "d7dec7f8-bfc1-4e09-b815-56bff951adff",
                            RoleId = "a26cf27d-a917-47a7-91e5-ecd8f7263671"
                        },
                        new
                        {
                            UserId = "f4e30aff-2a35-4c10-8266-19627406b95a",
                            RoleId = "a26cf27d-a917-47a7-91e5-ecd8f7263671"
                        },
                        new
                        {
                            UserId = "7f3531fc-a18e-4680-9936-7711fc967332",
                            RoleId = "a26cf27d-a917-47a7-91e5-ecd8f7263671"
                        },
                        new
                        {
                            UserId = "a556c3ed-e39f-4c3b-8260-27e299fa5997",
                            RoleId = "a26cf27d-a917-47a7-91e5-ecd8f7263671"
                        },
                        new
                        {
                            UserId = "17f6646b-025b-4dc7-ae89-cf4dce101242",
                            RoleId = "a26cf27d-a917-47a7-91e5-ecd8f7263671"
                        },
                        new
                        {
                            UserId = "cce4fe6b-9169-466e-a364-6912b115060e",
                            RoleId = "a26cf27d-a917-47a7-91e5-ecd8f7263671"
                        },
                        new
                        {
                            UserId = "42b90d73-7449-4d93-88a3-3944db4f23cb",
                            RoleId = "a26cf27d-a917-47a7-91e5-ecd8f7263671"
                        },
                        new
                        {
                            UserId = "797f84eb-78b3-44ec-a7f3-22a647be488e",
                            RoleId = "a26cf27d-a917-47a7-91e5-ecd8f7263671"
                        },
                        new
                        {
                            UserId = "9150d4c5-a7f9-4d4d-89ff-6e79c5d7f504",
                            RoleId = "a26cf27d-a917-47a7-91e5-ecd8f7263671"
                        },
                        new
                        {
                            UserId = "04df6fee-9b2f-44ea-8709-e42075e19065",
                            RoleId = "a26cf27d-a917-47a7-91e5-ecd8f7263671"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Faculty")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Gender")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PlaceOfBirth")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "19692afb-fbc3-40f4-8aa5-66ef2ec2e4e5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "968da335-5a2c-4c25-abcb-ed7649cb9f72",
                            DateOfBirth = new DateTime(2023, 5, 2, 20, 19, 49, 336, DateTimeKind.Local).AddTicks(7308),
                            Email = "admin@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Khoa học máy tính",
                            FullName = "Nguyễn Văn A",
                            Gender = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEMAEtMVhNKCkDbXDrNBUm7W5+KEMN2NkgHVDPCzcjG8bLRtfCjWB20li3uKnh/5JlQ==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "b1d85ebf-b570-4233-8ffa-1d879ac22e5e",
                            TwoFactorEnabled = false,
                            UserName = "admin@gmail.com"
                        },
                        new
                        {
                            Id = "d7dec7f8-bfc1-4e09-b815-56bff951adff",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "94be165e-0030-41cf-b212-3ffa51c2aff2",
                            DateOfBirth = new DateTime(2023, 5, 2, 20, 19, 49, 450, DateTimeKind.Local).AddTicks(2060),
                            Email = "user0@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_0",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER0@GMAIL.COM",
                            NormalizedUserName = "USER0@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAECEsOggQYCKLp6ITPVZ3zh1mvrqHCZaTf3DoM1QTELFzvsArkHdSHQLkG8nfybdviQ==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "40c366ef-f630-4d19-88a9-10e9ec9cd0ad",
                            TwoFactorEnabled = false,
                            UserName = "user0@gmail.com"
                        },
                        new
                        {
                            Id = "f4e30aff-2a35-4c10-8266-19627406b95a",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "53b04fe9-0125-43d2-83c4-283080de543c",
                            DateOfBirth = new DateTime(2023, 5, 2, 20, 19, 49, 591, DateTimeKind.Local).AddTicks(3286),
                            Email = "user1@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_1",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER1@GMAIL.COM",
                            NormalizedUserName = "USER1@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAELe+Vf0pIBI1mqdyPNmBn6gc6glPowspffo2BS5hi3MCsMtAfhsBKgaYEKpfTa+0FA==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "328bb24b-d677-4a34-8441-311b8e5dd5be",
                            TwoFactorEnabled = false,
                            UserName = "user1@gmail.com"
                        },
                        new
                        {
                            Id = "7f3531fc-a18e-4680-9936-7711fc967332",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0c7b077f-793d-4dfc-b26a-23c4f0c2761d",
                            DateOfBirth = new DateTime(2023, 5, 2, 20, 19, 49, 746, DateTimeKind.Local).AddTicks(3635),
                            Email = "user2@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_2",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER2@GMAIL.COM",
                            NormalizedUserName = "USER2@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEKWS+k72f+vRGtVX/JpiQtRbljHkKshYh3fWZSfF7ykC+jYJCJiBeb1GYM3bB45JKA==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "2624afca-e679-4bc2-828d-ba4e05a78b0e",
                            TwoFactorEnabled = false,
                            UserName = "user2@gmail.com"
                        },
                        new
                        {
                            Id = "a556c3ed-e39f-4c3b-8260-27e299fa5997",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4ec1f7f3-8d0a-4ce4-81b5-f5a5628964c0",
                            DateOfBirth = new DateTime(2023, 5, 2, 20, 19, 49, 883, DateTimeKind.Local).AddTicks(682),
                            Email = "user3@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_3",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER3@GMAIL.COM",
                            NormalizedUserName = "USER3@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEAVgbZTOEt8fx6YBXwojGXKXEQOrRGIevaPkv/YqB3rg+eeZ6vjbXJxMgz3L0zO3hg==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "6b4aa49c-556d-4e06-82e4-42b8e496e129",
                            TwoFactorEnabled = false,
                            UserName = "user3@gmail.com"
                        },
                        new
                        {
                            Id = "17f6646b-025b-4dc7-ae89-cf4dce101242",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ff03ce34-114b-4ed9-a3c7-e6da3265a524",
                            DateOfBirth = new DateTime(2023, 5, 2, 20, 19, 50, 22, DateTimeKind.Local).AddTicks(9730),
                            Email = "user4@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_4",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER4@GMAIL.COM",
                            NormalizedUserName = "USER4@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEEKlv3kRAhUyIWQrd5AtMKkYG/7rXsykllaZUrREaRZNzNqbl4GMB4GMq14Ds9kMlQ==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "9314edfd-96f5-46ab-876b-d1799245a04e",
                            TwoFactorEnabled = false,
                            UserName = "user4@gmail.com"
                        },
                        new
                        {
                            Id = "cce4fe6b-9169-466e-a364-6912b115060e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4cd4e31d-37cc-4359-9f87-6b07f6e7f54b",
                            DateOfBirth = new DateTime(2023, 5, 2, 20, 19, 50, 147, DateTimeKind.Local).AddTicks(4242),
                            Email = "user5@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_5",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER5@GMAIL.COM",
                            NormalizedUserName = "USER5@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEGwrYmbQTbXQiB7IxpeW1ZvzwWb1UMs+BFjge+v2TR9rPlq9zoUs/3HCuluYGfy0pA==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "bf0dd2a0-f1e2-48bb-990c-3862d3342c8d",
                            TwoFactorEnabled = false,
                            UserName = "user5@gmail.com"
                        },
                        new
                        {
                            Id = "42b90d73-7449-4d93-88a3-3944db4f23cb",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bd715a11-5baa-4265-8a10-8b6cac025ff4",
                            DateOfBirth = new DateTime(2023, 5, 2, 20, 19, 50, 259, DateTimeKind.Local).AddTicks(3068),
                            Email = "user6@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_6",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER6@GMAIL.COM",
                            NormalizedUserName = "USER6@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEKCW7J37TVHX+xJeKeHXpinYDdndUCQ0TPEqh9V1ZMzbak40VJTJJWSbe/VwyVFTHg==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "668b34f9-d083-4836-bbb9-cfbc15756f2d",
                            TwoFactorEnabled = false,
                            UserName = "user6@gmail.com"
                        },
                        new
                        {
                            Id = "797f84eb-78b3-44ec-a7f3-22a647be488e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e875b709-1279-42bb-8bc6-96710873d488",
                            DateOfBirth = new DateTime(2023, 5, 2, 20, 19, 50, 373, DateTimeKind.Local).AddTicks(8288),
                            Email = "user7@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_7",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER7@GMAIL.COM",
                            NormalizedUserName = "USER7@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEG+17s1+szTEvmHry4ssF+mp/XaM5trbu9QOFqtRLKjQaw/URhs6YLHl6RP/u6a3Xg==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "8f1fd559-7bb1-4d9d-a626-e91c55527782",
                            TwoFactorEnabled = false,
                            UserName = "user7@gmail.com"
                        },
                        new
                        {
                            Id = "9150d4c5-a7f9-4d4d-89ff-6e79c5d7f504",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ecaba934-755c-49b0-80d3-9fdc78e8e89a",
                            DateOfBirth = new DateTime(2023, 5, 2, 20, 19, 50, 492, DateTimeKind.Local).AddTicks(6167),
                            Email = "user8@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_8",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER8@GMAIL.COM",
                            NormalizedUserName = "USER8@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJEAWwLl0OewzLsXq/4WzgjJqUbVb+bns70KqYY6pO5EpOig6Fk2lA+AvRRMcBU7Yg==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "1fc0e115-bfd7-46c4-80e9-1258ee3d260c",
                            TwoFactorEnabled = false,
                            UserName = "user8@gmail.com"
                        },
                        new
                        {
                            Id = "04df6fee-9b2f-44ea-8709-e42075e19065",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8d7ec703-5418-4c0e-8d7f-24814e5a6c29",
                            DateOfBirth = new DateTime(2023, 5, 2, 20, 19, 50, 600, DateTimeKind.Local).AddTicks(813),
                            Email = "user9@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_9",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER9@GMAIL.COM",
                            NormalizedUserName = "USER9@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEIpBzyecjul/CO4Ikqfxhxk4/+UdottefBqElCDE6o9einvk/KaUv5E6VIgK+WclbA==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "87197e69-5fb8-4397-8b12-4297cc343eda",
                            TwoFactorEnabled = false,
                            UserName = "user9@gmail.com"
                        });
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Curriculum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Curriculums");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.EvalElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("Proportion")
                        .HasColumnType("int");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("EvalElements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 1,
                            Proportion = 20,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 2,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 2,
                            Proportion = 20,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 3,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 3,
                            Proportion = 20,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 4,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 4,
                            Proportion = 20,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 5,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 5,
                            Proportion = 20,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 6,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 1,
                            Proportion = 20,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 7,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 2,
                            Proportion = 20,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 8,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 3,
                            Proportion = 20,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 9,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 4,
                            Proportion = 20,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 10,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 5,
                            Proportion = 20,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 11,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 1,
                            Proportion = 20,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 12,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 2,
                            Proportion = 20,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 13,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 3,
                            Proportion = 20,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 14,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 4,
                            Proportion = 20,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 15,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 5,
                            Proportion = 20,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 16,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 1,
                            Proportion = 20,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 17,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 2,
                            Proportion = 20,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 18,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 3,
                            Proportion = 20,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 19,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 4,
                            Proportion = 20,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 20,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 5,
                            Proportion = 20,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 21,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 1,
                            Proportion = 20,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 22,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 2,
                            Proportion = 20,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 23,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 3,
                            Proportion = 20,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 24,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 4,
                            Proportion = 20,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 25,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 5,
                            Proportion = 20,
                            SubjectId = "0000005"
                        });
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Evaluate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Clo")
                        .HasColumnType("int");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("Proportion")
                        .HasColumnType("int");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Target")
                        .HasColumnType("int");

                    b.Property<string>("Test")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Evaluates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Clo = 1,
                            Method = "Thi viet",
                            Order = 1,
                            Proportion = 100,
                            SubjectId = "0000001",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 2,
                            Clo = 2,
                            Method = "Thi viet",
                            Order = 2,
                            Proportion = 100,
                            SubjectId = "0000001",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 3,
                            Clo = 3,
                            Method = "Thi viet",
                            Order = 3,
                            Proportion = 100,
                            SubjectId = "0000001",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 4,
                            Clo = 4,
                            Method = "Thi viet",
                            Order = 4,
                            Proportion = 100,
                            SubjectId = "0000001",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 5,
                            Clo = 5,
                            Method = "Thi viet",
                            Order = 5,
                            Proportion = 100,
                            SubjectId = "0000001",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 6,
                            Clo = 1,
                            Method = "Thi viet",
                            Order = 1,
                            Proportion = 100,
                            SubjectId = "0000002",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 7,
                            Clo = 2,
                            Method = "Thi viet",
                            Order = 2,
                            Proportion = 100,
                            SubjectId = "0000002",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 8,
                            Clo = 3,
                            Method = "Thi viet",
                            Order = 3,
                            Proportion = 100,
                            SubjectId = "0000002",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 9,
                            Clo = 4,
                            Method = "Thi viet",
                            Order = 4,
                            Proportion = 100,
                            SubjectId = "0000002",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 10,
                            Clo = 5,
                            Method = "Thi viet",
                            Order = 5,
                            Proportion = 100,
                            SubjectId = "0000002",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 11,
                            Clo = 1,
                            Method = "Thi viet",
                            Order = 1,
                            Proportion = 100,
                            SubjectId = "0000003",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 12,
                            Clo = 2,
                            Method = "Thi viet",
                            Order = 2,
                            Proportion = 100,
                            SubjectId = "0000003",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 13,
                            Clo = 3,
                            Method = "Thi viet",
                            Order = 3,
                            Proportion = 100,
                            SubjectId = "0000003",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 14,
                            Clo = 4,
                            Method = "Thi viet",
                            Order = 4,
                            Proportion = 100,
                            SubjectId = "0000003",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 15,
                            Clo = 5,
                            Method = "Thi viet",
                            Order = 5,
                            Proportion = 100,
                            SubjectId = "0000003",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 16,
                            Clo = 1,
                            Method = "Thi viet",
                            Order = 1,
                            Proportion = 100,
                            SubjectId = "0000004",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 17,
                            Clo = 2,
                            Method = "Thi viet",
                            Order = 2,
                            Proportion = 100,
                            SubjectId = "0000004",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 18,
                            Clo = 3,
                            Method = "Thi viet",
                            Order = 3,
                            Proportion = 100,
                            SubjectId = "0000004",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 19,
                            Clo = 4,
                            Method = "Thi viet",
                            Order = 4,
                            Proportion = 100,
                            SubjectId = "0000004",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 20,
                            Clo = 5,
                            Method = "Thi viet",
                            Order = 5,
                            Proportion = 100,
                            SubjectId = "0000004",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 21,
                            Clo = 1,
                            Method = "Thi viet",
                            Order = 1,
                            Proportion = 100,
                            SubjectId = "0000005",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 22,
                            Clo = 2,
                            Method = "Thi viet",
                            Order = 2,
                            Proportion = 100,
                            SubjectId = "0000005",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 23,
                            Clo = 3,
                            Method = "Thi viet",
                            Order = 3,
                            Proportion = 100,
                            SubjectId = "0000005",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 24,
                            Clo = 4,
                            Method = "Thi viet",
                            Order = 4,
                            Proportion = 100,
                            SubjectId = "0000005",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 25,
                            Clo = 5,
                            Method = "Thi viet",
                            Order = 5,
                            Proportion = 100,
                            SubjectId = "0000005",
                            Target = 75,
                            Test = "Bai kiem tra"
                        });
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Semester", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Semesters");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Subject", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("A")
                        .HasColumnType("longtext");

                    b.Property<string>("Abstract")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("B")
                        .HasColumnType("longtext");

                    b.Property<string>("C")
                        .HasColumnType("longtext");

                    b.Property<string>("Documents")
                        .HasColumnType("text");

                    b.Property<string>("Goals")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Other")
                        .HasColumnType("text");

                    b.Property<int>("PracticeCredits")
                        .HasColumnType("int");

                    b.Property<string>("RequestUserMail")
                        .HasColumnType("longtext");

                    b.Property<int>("SelfLearningCredits")
                        .HasColumnType("int");

                    b.Property<string>("Teachers")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TheoryCredits")
                        .HasColumnType("int");

                    b.Property<int>("TotalCredits")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = "0000001",
                            Abstract = "Day la phan tom tat hoc phan",
                            Documents = "Tai lieu 1\nTai Lieu 2\nTai Lieu 3",
                            Goals = "Muc tieu 1\nMuc tieu 2\nMuc tieu 3",
                            Name = "Subject 1",
                            PracticeCredits = 0,
                            SelfLearningCredits = 0,
                            Teachers = "Teacher 1\nTeacher 2\nTeacher3",
                            TheoryCredits = 0,
                            TotalCredits = 0
                        },
                        new
                        {
                            Id = "0000002",
                            Abstract = "Day la phan tom tat hoc phan",
                            Documents = "Tai lieu 1\nTai Lieu 2\nTai Lieu 3",
                            Goals = "Muc tieu 1\nMuc tieu 2\nMuc tieu 3",
                            Name = "Subject 2",
                            PracticeCredits = 0,
                            SelfLearningCredits = 0,
                            Teachers = "Teacher 1\nTeacher 2\nTeacher3",
                            TheoryCredits = 0,
                            TotalCredits = 0
                        },
                        new
                        {
                            Id = "0000003",
                            Abstract = "Day la phan tom tat hoc phan",
                            Documents = "Tai lieu 1\nTai Lieu 2\nTai Lieu 3",
                            Goals = "Muc tieu 1\nMuc tieu 2\nMuc tieu 3",
                            Name = "Subject 3",
                            PracticeCredits = 0,
                            SelfLearningCredits = 0,
                            Teachers = "Teacher 1\nTeacher 2\nTeacher3",
                            TheoryCredits = 0,
                            TotalCredits = 0
                        },
                        new
                        {
                            Id = "0000004",
                            Abstract = "Day la phan tom tat hoc phan",
                            Documents = "Tai lieu 1\nTai Lieu 2\nTai Lieu 3",
                            Goals = "Muc tieu 1\nMuc tieu 2\nMuc tieu 3",
                            Name = "Subject 4",
                            PracticeCredits = 0,
                            SelfLearningCredits = 0,
                            Teachers = "Teacher 1\nTeacher 2\nTeacher3",
                            TheoryCredits = 0,
                            TotalCredits = 0
                        },
                        new
                        {
                            Id = "0000005",
                            Abstract = "Day la phan tom tat hoc phan",
                            Documents = "Tai lieu 1\nTai Lieu 2\nTai Lieu 3",
                            Goals = "Muc tieu 1\nMuc tieu 2\nMuc tieu 3",
                            Name = "Subject 5",
                            PracticeCredits = 0,
                            SelfLearningCredits = 0,
                            Teachers = "Teacher 1\nTeacher 2\nTeacher3",
                            TheoryCredits = 0,
                            TotalCredits = 0
                        });
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bonus")
                        .HasColumnType("text");

                    b.Property<string>("Clos")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NLessons")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("SubjectContents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 1,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 2,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 2,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 3,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 3,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 4,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 4,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 5,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 5,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 6,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 1,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 7,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 2,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 8,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 3,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 9,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 4,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 10,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 5,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 11,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 1,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 12,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 2,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 13,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 3,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 14,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 4,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 15,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 5,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 16,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 1,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 17,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 2,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 18,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 3,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 19,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 4,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 20,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 5,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 21,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 1,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 22,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 2,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 23,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 3,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 24,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 4,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 25,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 5,
                            SubjectId = "0000005"
                        });
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectCurriculum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CurriculumId")
                        .HasColumnType("int");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CurriculumId");

                    b.HasIndex("SemesterId");

                    b.HasIndex("SubjectId");

                    b.ToTable("SubjectCurriculums");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectOutputStandard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Clo")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SoPerPi")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("SubjectOutputStandards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Clo = 1,
                            Content = "Dau ra 1",
                            SoPerPi = "Text",
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 2,
                            Clo = 2,
                            Content = "Dau ra 2",
                            SoPerPi = "Text",
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 3,
                            Clo = 3,
                            Content = "Dau ra 3",
                            SoPerPi = "Text",
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 4,
                            Clo = 4,
                            Content = "Dau ra 4",
                            SoPerPi = "Text",
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 5,
                            Clo = 5,
                            Content = "Dau ra 5",
                            SoPerPi = "Text",
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 6,
                            Clo = 1,
                            Content = "Dau ra 1",
                            SoPerPi = "Text",
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 7,
                            Clo = 2,
                            Content = "Dau ra 2",
                            SoPerPi = "Text",
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 8,
                            Clo = 3,
                            Content = "Dau ra 3",
                            SoPerPi = "Text",
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 9,
                            Clo = 4,
                            Content = "Dau ra 4",
                            SoPerPi = "Text",
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 10,
                            Clo = 5,
                            Content = "Dau ra 5",
                            SoPerPi = "Text",
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 11,
                            Clo = 1,
                            Content = "Dau ra 1",
                            SoPerPi = "Text",
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 12,
                            Clo = 2,
                            Content = "Dau ra 2",
                            SoPerPi = "Text",
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 13,
                            Clo = 3,
                            Content = "Dau ra 3",
                            SoPerPi = "Text",
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 14,
                            Clo = 4,
                            Content = "Dau ra 4",
                            SoPerPi = "Text",
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 15,
                            Clo = 5,
                            Content = "Dau ra 5",
                            SoPerPi = "Text",
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 16,
                            Clo = 1,
                            Content = "Dau ra 1",
                            SoPerPi = "Text",
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 17,
                            Clo = 2,
                            Content = "Dau ra 2",
                            SoPerPi = "Text",
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 18,
                            Clo = 3,
                            Content = "Dau ra 3",
                            SoPerPi = "Text",
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 19,
                            Clo = 4,
                            Content = "Dau ra 4",
                            SoPerPi = "Text",
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 20,
                            Clo = 5,
                            Content = "Dau ra 5",
                            SoPerPi = "Text",
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 21,
                            Clo = 1,
                            Content = "Dau ra 1",
                            SoPerPi = "Text",
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 22,
                            Clo = 2,
                            Content = "Dau ra 2",
                            SoPerPi = "Text",
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 23,
                            Clo = 3,
                            Content = "Dau ra 3",
                            SoPerPi = "Text",
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 24,
                            Clo = 4,
                            Content = "Dau ra 4",
                            SoPerPi = "Text",
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 25,
                            Clo = 5,
                            Content = "Dau ra 5",
                            SoPerPi = "Text",
                            SubjectId = "0000005"
                        });
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.HasIndex("UserId");

                    b.ToTable("SubjectUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebDeCuong.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.EvalElement", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.Subject", "Subject")
                        .WithMany("EvalElements")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Evaluate", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.Subject", "Subject")
                        .WithMany("Evaluates")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectContent", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.Subject", "Subject")
                        .WithMany("SubjectContents")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectCurriculum", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.Curriculum", "Curriculum")
                        .WithMany("SubjectCurriculum")
                        .HasForeignKey("CurriculumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebDeCuong.Data.Entities.Semester", "Semester")
                        .WithMany("SubjectCurriculum")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebDeCuong.Data.Entities.Subject", "Subject")
                        .WithMany("SubjectCurriculum")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curriculum");

                    b.Navigation("Semester");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectOutputStandard", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.Subject", "Subject")
                        .WithMany("SubjectOutputStandards")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectUser", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.Subject", "Subject")
                        .WithMany("SubjectUsers")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebDeCuong.Data.Entities.ApplicationUser", "User")
                        .WithMany("SubjectUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.ApplicationUser", b =>
                {
                    b.Navigation("SubjectUsers");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Curriculum", b =>
                {
                    b.Navigation("SubjectCurriculum");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Semester", b =>
                {
                    b.Navigation("SubjectCurriculum");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Subject", b =>
                {
                    b.Navigation("EvalElements");

                    b.Navigation("Evaluates");

                    b.Navigation("SubjectContents");

                    b.Navigation("SubjectCurriculum");

                    b.Navigation("SubjectOutputStandards");

                    b.Navigation("SubjectUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
