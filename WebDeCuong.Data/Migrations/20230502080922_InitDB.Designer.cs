// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebDeCuong.Data;

#nullable disable

namespace WebDeCuong.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230502080922_InitDB")]
    partial class InitDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "cd9bbb33-3eb6-477c-b87c-80f92896c33c",
                            ConcurrencyStamp = "cd9bbb33-3eb6-477c-b87c-80f92896c33c",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "55ee118a-2603-443d-81fe-430c9b05e066",
                            ConcurrencyStamp = "55ee118a-2603-443d-81fe-430c9b05e066",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "235fb507-c66d-465c-aaac-c5fc777e87f2",
                            RoleId = "55ee118a-2603-443d-81fe-430c9b05e066"
                        },
                        new
                        {
                            UserId = "24dd35ab-94a0-4697-bc18-bf8dc433eaf3",
                            RoleId = "cd9bbb33-3eb6-477c-b87c-80f92896c33c"
                        },
                        new
                        {
                            UserId = "caf97252-1da9-4693-b2d8-d6fe50d74af9",
                            RoleId = "cd9bbb33-3eb6-477c-b87c-80f92896c33c"
                        },
                        new
                        {
                            UserId = "af239852-8612-4e4c-8612-c3382d42a0d1",
                            RoleId = "cd9bbb33-3eb6-477c-b87c-80f92896c33c"
                        },
                        new
                        {
                            UserId = "6bfede16-ceca-45eb-87bf-33f735c282f0",
                            RoleId = "cd9bbb33-3eb6-477c-b87c-80f92896c33c"
                        },
                        new
                        {
                            UserId = "e0bb91da-ef1a-40ea-8d32-eb200a803efd",
                            RoleId = "cd9bbb33-3eb6-477c-b87c-80f92896c33c"
                        },
                        new
                        {
                            UserId = "3bc840ce-1d87-4687-ab0d-f0d5edf5a8be",
                            RoleId = "cd9bbb33-3eb6-477c-b87c-80f92896c33c"
                        },
                        new
                        {
                            UserId = "b9b351c1-c58e-4ce8-8cdc-7bdc8e0a3bad",
                            RoleId = "cd9bbb33-3eb6-477c-b87c-80f92896c33c"
                        },
                        new
                        {
                            UserId = "0a8e83dc-5ef8-4179-9493-b49862c3080c",
                            RoleId = "cd9bbb33-3eb6-477c-b87c-80f92896c33c"
                        },
                        new
                        {
                            UserId = "aaaa8253-3c8c-4250-ae09-04a7e565ebcd",
                            RoleId = "cd9bbb33-3eb6-477c-b87c-80f92896c33c"
                        },
                        new
                        {
                            UserId = "5d8b1e05-2584-48a8-be28-b8b263b31a11",
                            RoleId = "cd9bbb33-3eb6-477c-b87c-80f92896c33c"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Faculty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PlaceOfBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "235fb507-c66d-465c-aaac-c5fc777e87f2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "eda7adfe-cc28-4da9-b97c-8afeeb604fc4",
                            DateOfBirth = new DateTime(2023, 5, 2, 15, 9, 21, 157, DateTimeKind.Local).AddTicks(7956),
                            Email = "admin@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Khoa học máy tính",
                            FullName = "Nguyễn Văn A",
                            Gender = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEBH9gVHTMlkHQJ2V8qEYHcPBanoNHJ+RUJ/6uV36rCUVtz6xlxecv0UijZ1gst/Y/w==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "8d0f29ad-201b-4e2a-88cd-84db60d654aa",
                            TwoFactorEnabled = false,
                            UserName = "admin@gmail.com"
                        },
                        new
                        {
                            Id = "24dd35ab-94a0-4697-bc18-bf8dc433eaf3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b9cd4e4d-14cd-4735-8b09-00c3ee4f0793",
                            DateOfBirth = new DateTime(2023, 5, 2, 15, 9, 21, 277, DateTimeKind.Local).AddTicks(8399),
                            Email = "user0@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_0",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER0@GMAIL.COM",
                            NormalizedUserName = "USER0@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAECg78Qp9zNIq2D4AVxx1ioYXrQ8jXBF1VMYnBpgkHuiXLLZrl6HDkwjjbWOv0TCuyQ==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "7cb4cf94-5a23-470d-9f95-75a49eee22a3",
                            TwoFactorEnabled = false,
                            UserName = "user0@gmail.com"
                        },
                        new
                        {
                            Id = "caf97252-1da9-4693-b2d8-d6fe50d74af9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f41c45b7-9efa-41ec-9cde-036504071a16",
                            DateOfBirth = new DateTime(2023, 5, 2, 15, 9, 21, 413, DateTimeKind.Local).AddTicks(2650),
                            Email = "user1@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_1",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER1@GMAIL.COM",
                            NormalizedUserName = "USER1@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAELuovoO7KPlqDURaEOVvwQbSJKqpoEKi3cay45cKWndqP8TfHaAc7eLinj3U34wiBw==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "d13dd28e-4b17-48dc-b43e-f2f9f247532d",
                            TwoFactorEnabled = false,
                            UserName = "user1@gmail.com"
                        },
                        new
                        {
                            Id = "af239852-8612-4e4c-8612-c3382d42a0d1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1e84e5c9-a0d6-4be4-83f4-3f1e332b9e8a",
                            DateOfBirth = new DateTime(2023, 5, 2, 15, 9, 21, 543, DateTimeKind.Local).AddTicks(2245),
                            Email = "user2@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_2",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER2@GMAIL.COM",
                            NormalizedUserName = "USER2@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEIvg8jc0DP86uZwnbN/vzVv6/zkzmxLPQ3d/R1f2wqfm3vXgi0rI3alrnPHwT9oivg==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "ffe7f24b-7ffd-4531-8223-6750a51f90fc",
                            TwoFactorEnabled = false,
                            UserName = "user2@gmail.com"
                        },
                        new
                        {
                            Id = "6bfede16-ceca-45eb-87bf-33f735c282f0",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2c601a4d-66d9-4546-a33d-f1771765b8f5",
                            DateOfBirth = new DateTime(2023, 5, 2, 15, 9, 21, 666, DateTimeKind.Local).AddTicks(6168),
                            Email = "user3@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_3",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER3@GMAIL.COM",
                            NormalizedUserName = "USER3@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEMVz/jrXWP22hVIFH4sMk+1RUkypi03FgSbyY3RnuXgnnEenIefi+98IKMHiya6dtw==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "7f44e434-354b-4128-baae-9321e497671f",
                            TwoFactorEnabled = false,
                            UserName = "user3@gmail.com"
                        },
                        new
                        {
                            Id = "e0bb91da-ef1a-40ea-8d32-eb200a803efd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ea3b6474-a234-4bf4-a6c5-0d7e03a0724d",
                            DateOfBirth = new DateTime(2023, 5, 2, 15, 9, 21, 808, DateTimeKind.Local).AddTicks(2984),
                            Email = "user4@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_4",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER4@GMAIL.COM",
                            NormalizedUserName = "USER4@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEPwWTh97pvqRO4pcunMt/Ra9uAu9AXhGwJC9GeVLdaABhQRBQIoy9tKViBLkQqzlvA==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "a864c881-ef4c-41d4-bc61-b88b7442ca97",
                            TwoFactorEnabled = false,
                            UserName = "user4@gmail.com"
                        },
                        new
                        {
                            Id = "3bc840ce-1d87-4687-ab0d-f0d5edf5a8be",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5603bb1c-3b27-4372-bc41-c7a05743ba36",
                            DateOfBirth = new DateTime(2023, 5, 2, 15, 9, 21, 934, DateTimeKind.Local).AddTicks(6809),
                            Email = "user5@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_5",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER5@GMAIL.COM",
                            NormalizedUserName = "USER5@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEMZjLhX+rgYT2GKo69O0TqPmMobh7OkJRrHacmZ89v85x1Tc6bFF1g4f6F/DOcgXqg==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "a5b6cd7b-0c21-4867-b094-4391d67f788e",
                            TwoFactorEnabled = false,
                            UserName = "user5@gmail.com"
                        },
                        new
                        {
                            Id = "b9b351c1-c58e-4ce8-8cdc-7bdc8e0a3bad",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "00006daa-1601-4cee-8d16-391d04abec0e",
                            DateOfBirth = new DateTime(2023, 5, 2, 15, 9, 22, 79, DateTimeKind.Local).AddTicks(9149),
                            Email = "user6@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_6",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER6@GMAIL.COM",
                            NormalizedUserName = "USER6@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAECBwYH4S704W0WIvtQo1YOa9FTvDsr+w+Yk5fSLB9LX7zlnjbmvIghOBYYB8aGQ73A==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "abde66d1-578c-4008-b609-f59af7e117ac",
                            TwoFactorEnabled = false,
                            UserName = "user6@gmail.com"
                        },
                        new
                        {
                            Id = "0a8e83dc-5ef8-4179-9493-b49862c3080c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5aa94164-6edf-406f-a98e-03c24c408b6a",
                            DateOfBirth = new DateTime(2023, 5, 2, 15, 9, 22, 208, DateTimeKind.Local).AddTicks(648),
                            Email = "user7@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_7",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER7@GMAIL.COM",
                            NormalizedUserName = "USER7@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAELB0FJyKhS9APPv2nnXIE2r6PWK86FtUwO82RkCDnPewXTXiyayKxrF/NlrK48gT6g==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "cc88f81b-b616-47e4-a7ea-9cf1fa2e9200",
                            TwoFactorEnabled = false,
                            UserName = "user7@gmail.com"
                        },
                        new
                        {
                            Id = "aaaa8253-3c8c-4250-ae09-04a7e565ebcd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "28d61496-1e04-459a-ac00-21cedb3453c7",
                            DateOfBirth = new DateTime(2023, 5, 2, 15, 9, 22, 333, DateTimeKind.Local).AddTicks(9660),
                            Email = "user8@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_8",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER8@GMAIL.COM",
                            NormalizedUserName = "USER8@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEHVnU/W69vMI8QRqPyO7lVWu+bDfriyJPtj6BqKP4Gtami8isQkpombdidsZucCfFg==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "684dc97c-7460-4261-bb33-ebcc91d799d9",
                            TwoFactorEnabled = false,
                            UserName = "user8@gmail.com"
                        },
                        new
                        {
                            Id = "5d8b1e05-2584-48a8-be28-b8b263b31a11",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4c9c3ff1-670c-4676-baf6-de2047150b11",
                            DateOfBirth = new DateTime(2023, 5, 2, 15, 9, 22, 449, DateTimeKind.Local).AddTicks(2574),
                            Email = "user9@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_9",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER9@GMAIL.COM",
                            NormalizedUserName = "USER9@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEI7WqwVCx6A9Esy+Ht07jWXJQ3eSAxPnQ3rOi1aZZKOBoK4+KFZ6pR/a0Xg0k+dWRQ==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "925d0ea6-4237-4e7c-901a-2b15fa0231fd",
                            TwoFactorEnabled = false,
                            UserName = "user9@gmail.com"
                        });
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Curriculum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Curriculums");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.EvalElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("Proportion")
                        .HasColumnType("int");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("EvalElements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 1,
                            Proportion = 20,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 2,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 2,
                            Proportion = 20,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 3,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 3,
                            Proportion = 20,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 4,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 4,
                            Proportion = 20,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 5,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 5,
                            Proportion = 20,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 6,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 1,
                            Proportion = 20,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 7,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 2,
                            Proportion = 20,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 8,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 3,
                            Proportion = 20,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 9,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 4,
                            Proportion = 20,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 10,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 5,
                            Proportion = 20,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 11,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 1,
                            Proportion = 20,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 12,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 2,
                            Proportion = 20,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 13,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 3,
                            Proportion = 20,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 14,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 4,
                            Proportion = 20,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 15,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 5,
                            Proportion = 20,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 16,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 1,
                            Proportion = 20,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 17,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 2,
                            Proportion = 20,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 18,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 3,
                            Proportion = 20,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 19,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 4,
                            Proportion = 20,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 20,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 5,
                            Proportion = 20,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 21,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 1,
                            Proportion = 20,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 22,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 2,
                            Proportion = 20,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 23,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 3,
                            Proportion = 20,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 24,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 4,
                            Proportion = 20,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 25,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 5,
                            Proportion = 20,
                            SubjectId = "0000005"
                        });
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Evaluate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Clo")
                        .HasColumnType("int");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("Proportion")
                        .HasColumnType("int");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Target")
                        .HasColumnType("int");

                    b.Property<string>("Test")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Evaluates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Clo = 1,
                            Method = "Thi viet",
                            Order = 1,
                            Proportion = 100,
                            SubjectId = "0000001",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 2,
                            Clo = 2,
                            Method = "Thi viet",
                            Order = 2,
                            Proportion = 100,
                            SubjectId = "0000001",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 3,
                            Clo = 3,
                            Method = "Thi viet",
                            Order = 3,
                            Proportion = 100,
                            SubjectId = "0000001",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 4,
                            Clo = 4,
                            Method = "Thi viet",
                            Order = 4,
                            Proportion = 100,
                            SubjectId = "0000001",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 5,
                            Clo = 5,
                            Method = "Thi viet",
                            Order = 5,
                            Proportion = 100,
                            SubjectId = "0000001",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 6,
                            Clo = 1,
                            Method = "Thi viet",
                            Order = 1,
                            Proportion = 100,
                            SubjectId = "0000002",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 7,
                            Clo = 2,
                            Method = "Thi viet",
                            Order = 2,
                            Proportion = 100,
                            SubjectId = "0000002",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 8,
                            Clo = 3,
                            Method = "Thi viet",
                            Order = 3,
                            Proportion = 100,
                            SubjectId = "0000002",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 9,
                            Clo = 4,
                            Method = "Thi viet",
                            Order = 4,
                            Proportion = 100,
                            SubjectId = "0000002",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 10,
                            Clo = 5,
                            Method = "Thi viet",
                            Order = 5,
                            Proportion = 100,
                            SubjectId = "0000002",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 11,
                            Clo = 1,
                            Method = "Thi viet",
                            Order = 1,
                            Proportion = 100,
                            SubjectId = "0000003",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 12,
                            Clo = 2,
                            Method = "Thi viet",
                            Order = 2,
                            Proportion = 100,
                            SubjectId = "0000003",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 13,
                            Clo = 3,
                            Method = "Thi viet",
                            Order = 3,
                            Proportion = 100,
                            SubjectId = "0000003",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 14,
                            Clo = 4,
                            Method = "Thi viet",
                            Order = 4,
                            Proportion = 100,
                            SubjectId = "0000003",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 15,
                            Clo = 5,
                            Method = "Thi viet",
                            Order = 5,
                            Proportion = 100,
                            SubjectId = "0000003",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 16,
                            Clo = 1,
                            Method = "Thi viet",
                            Order = 1,
                            Proportion = 100,
                            SubjectId = "0000004",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 17,
                            Clo = 2,
                            Method = "Thi viet",
                            Order = 2,
                            Proportion = 100,
                            SubjectId = "0000004",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 18,
                            Clo = 3,
                            Method = "Thi viet",
                            Order = 3,
                            Proportion = 100,
                            SubjectId = "0000004",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 19,
                            Clo = 4,
                            Method = "Thi viet",
                            Order = 4,
                            Proportion = 100,
                            SubjectId = "0000004",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 20,
                            Clo = 5,
                            Method = "Thi viet",
                            Order = 5,
                            Proportion = 100,
                            SubjectId = "0000004",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 21,
                            Clo = 1,
                            Method = "Thi viet",
                            Order = 1,
                            Proportion = 100,
                            SubjectId = "0000005",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 22,
                            Clo = 2,
                            Method = "Thi viet",
                            Order = 2,
                            Proportion = 100,
                            SubjectId = "0000005",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 23,
                            Clo = 3,
                            Method = "Thi viet",
                            Order = 3,
                            Proportion = 100,
                            SubjectId = "0000005",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 24,
                            Clo = 4,
                            Method = "Thi viet",
                            Order = 4,
                            Proportion = 100,
                            SubjectId = "0000005",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 25,
                            Clo = 5,
                            Method = "Thi viet",
                            Order = 5,
                            Proportion = 100,
                            SubjectId = "0000005",
                            Target = 75,
                            Test = "Bai kiem tra"
                        });
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Semester", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Semesters");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Subject", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("A")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Abstract")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("B")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("C")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Documents")
                        .HasColumnType("ntext");

                    b.Property<string>("Goals")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Other")
                        .HasColumnType("ntext");

                    b.Property<int>("PracticeCredits")
                        .HasColumnType("int");

                    b.Property<string>("RequestUserMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SelfLearningCredits")
                        .HasColumnType("int");

                    b.Property<string>("Teachers")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<int>("TheoryCredits")
                        .HasColumnType("int");

                    b.Property<int>("TotalCredits")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = "0000001",
                            Abstract = "Day la phan tom tat hoc phan",
                            Documents = "Tai lieu 1\nTai Lieu 2\nTai Lieu 3",
                            Goals = "Muc tieu 1\nMuc tieu 2\nMuc tieu 3",
                            Name = "Subject 1",
                            PracticeCredits = 0,
                            SelfLearningCredits = 0,
                            Teachers = "Teacher 1\nTeacher 2\nTeacher3",
                            TheoryCredits = 0,
                            TotalCredits = 0
                        },
                        new
                        {
                            Id = "0000002",
                            Abstract = "Day la phan tom tat hoc phan",
                            Documents = "Tai lieu 1\nTai Lieu 2\nTai Lieu 3",
                            Goals = "Muc tieu 1\nMuc tieu 2\nMuc tieu 3",
                            Name = "Subject 2",
                            PracticeCredits = 0,
                            SelfLearningCredits = 0,
                            Teachers = "Teacher 1\nTeacher 2\nTeacher3",
                            TheoryCredits = 0,
                            TotalCredits = 0
                        },
                        new
                        {
                            Id = "0000003",
                            Abstract = "Day la phan tom tat hoc phan",
                            Documents = "Tai lieu 1\nTai Lieu 2\nTai Lieu 3",
                            Goals = "Muc tieu 1\nMuc tieu 2\nMuc tieu 3",
                            Name = "Subject 3",
                            PracticeCredits = 0,
                            SelfLearningCredits = 0,
                            Teachers = "Teacher 1\nTeacher 2\nTeacher3",
                            TheoryCredits = 0,
                            TotalCredits = 0
                        },
                        new
                        {
                            Id = "0000004",
                            Abstract = "Day la phan tom tat hoc phan",
                            Documents = "Tai lieu 1\nTai Lieu 2\nTai Lieu 3",
                            Goals = "Muc tieu 1\nMuc tieu 2\nMuc tieu 3",
                            Name = "Subject 4",
                            PracticeCredits = 0,
                            SelfLearningCredits = 0,
                            Teachers = "Teacher 1\nTeacher 2\nTeacher3",
                            TheoryCredits = 0,
                            TotalCredits = 0
                        },
                        new
                        {
                            Id = "0000005",
                            Abstract = "Day la phan tom tat hoc phan",
                            Documents = "Tai lieu 1\nTai Lieu 2\nTai Lieu 3",
                            Goals = "Muc tieu 1\nMuc tieu 2\nMuc tieu 3",
                            Name = "Subject 5",
                            PracticeCredits = 0,
                            SelfLearningCredits = 0,
                            Teachers = "Teacher 1\nTeacher 2\nTeacher3",
                            TheoryCredits = 0,
                            TotalCredits = 0
                        });
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bonus")
                        .HasColumnType("ntext");

                    b.Property<string>("Clos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NLessons")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("SubjectContents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 1,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 2,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 2,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 3,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 3,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 4,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 4,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 5,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 5,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 6,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 1,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 7,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 2,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 8,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 3,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 9,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 4,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 10,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 5,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 11,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 1,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 12,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 2,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 13,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 3,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 14,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 4,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 15,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 5,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 16,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 1,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 17,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 2,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 18,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 3,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 19,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 4,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 20,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 5,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 21,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 1,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 22,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 2,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 23,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 3,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 24,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 4,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 25,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 5,
                            SubjectId = "0000005"
                        });
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectCurriculum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CurriculumId")
                        .HasColumnType("int");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CurriculumId");

                    b.HasIndex("SemesterId");

                    b.HasIndex("SubjectId");

                    b.ToTable("SubjectCurriculums");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectOutputStandard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Clo")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("SoPerPi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("SubjectOutputStandards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Clo = 1,
                            Content = "Dau ra 1",
                            SoPerPi = "Text",
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 2,
                            Clo = 2,
                            Content = "Dau ra 2",
                            SoPerPi = "Text",
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 3,
                            Clo = 3,
                            Content = "Dau ra 3",
                            SoPerPi = "Text",
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 4,
                            Clo = 4,
                            Content = "Dau ra 4",
                            SoPerPi = "Text",
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 5,
                            Clo = 5,
                            Content = "Dau ra 5",
                            SoPerPi = "Text",
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 6,
                            Clo = 1,
                            Content = "Dau ra 1",
                            SoPerPi = "Text",
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 7,
                            Clo = 2,
                            Content = "Dau ra 2",
                            SoPerPi = "Text",
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 8,
                            Clo = 3,
                            Content = "Dau ra 3",
                            SoPerPi = "Text",
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 9,
                            Clo = 4,
                            Content = "Dau ra 4",
                            SoPerPi = "Text",
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 10,
                            Clo = 5,
                            Content = "Dau ra 5",
                            SoPerPi = "Text",
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 11,
                            Clo = 1,
                            Content = "Dau ra 1",
                            SoPerPi = "Text",
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 12,
                            Clo = 2,
                            Content = "Dau ra 2",
                            SoPerPi = "Text",
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 13,
                            Clo = 3,
                            Content = "Dau ra 3",
                            SoPerPi = "Text",
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 14,
                            Clo = 4,
                            Content = "Dau ra 4",
                            SoPerPi = "Text",
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 15,
                            Clo = 5,
                            Content = "Dau ra 5",
                            SoPerPi = "Text",
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 16,
                            Clo = 1,
                            Content = "Dau ra 1",
                            SoPerPi = "Text",
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 17,
                            Clo = 2,
                            Content = "Dau ra 2",
                            SoPerPi = "Text",
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 18,
                            Clo = 3,
                            Content = "Dau ra 3",
                            SoPerPi = "Text",
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 19,
                            Clo = 4,
                            Content = "Dau ra 4",
                            SoPerPi = "Text",
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 20,
                            Clo = 5,
                            Content = "Dau ra 5",
                            SoPerPi = "Text",
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 21,
                            Clo = 1,
                            Content = "Dau ra 1",
                            SoPerPi = "Text",
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 22,
                            Clo = 2,
                            Content = "Dau ra 2",
                            SoPerPi = "Text",
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 23,
                            Clo = 3,
                            Content = "Dau ra 3",
                            SoPerPi = "Text",
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 24,
                            Clo = 4,
                            Content = "Dau ra 4",
                            SoPerPi = "Text",
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 25,
                            Clo = 5,
                            Content = "Dau ra 5",
                            SoPerPi = "Text",
                            SubjectId = "0000005"
                        });
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.HasIndex("UserId");

                    b.ToTable("SubjectUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebDeCuong.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.EvalElement", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.Subject", "Subject")
                        .WithMany("EvalElements")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Evaluate", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.Subject", "Subject")
                        .WithMany("Evaluates")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectContent", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.Subject", "Subject")
                        .WithMany("SubjectContents")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectCurriculum", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.Curriculum", "Curriculum")
                        .WithMany("SubjectCurriculum")
                        .HasForeignKey("CurriculumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebDeCuong.Data.Entities.Semester", "Semester")
                        .WithMany("SubjectCurriculum")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebDeCuong.Data.Entities.Subject", "Subject")
                        .WithMany("SubjectCurriculum")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curriculum");

                    b.Navigation("Semester");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectOutputStandard", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.Subject", "Subject")
                        .WithMany("SubjectOutputStandards")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectUser", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.Subject", "Subject")
                        .WithMany("SubjectUsers")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebDeCuong.Data.Entities.ApplicationUser", "User")
                        .WithMany("SubjectUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.ApplicationUser", b =>
                {
                    b.Navigation("SubjectUsers");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Curriculum", b =>
                {
                    b.Navigation("SubjectCurriculum");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Semester", b =>
                {
                    b.Navigation("SubjectCurriculum");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Subject", b =>
                {
                    b.Navigation("EvalElements");

                    b.Navigation("Evaluates");

                    b.Navigation("SubjectContents");

                    b.Navigation("SubjectCurriculum");

                    b.Navigation("SubjectOutputStandards");

                    b.Navigation("SubjectUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
