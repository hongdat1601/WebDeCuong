// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebDeCuong.Data;

#nullable disable

namespace WebDeCuong.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230424020829_SemesteUpdater")]
    partial class SemesteUpdater
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "b0f0bb29-0da5-41d0-8462-221076d62711",
                            ConcurrencyStamp = "b0f0bb29-0da5-41d0-8462-221076d62711",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "bfb7a4a0-f00f-4588-970d-7228eb0905e1",
                            ConcurrencyStamp = "bfb7a4a0-f00f-4588-970d-7228eb0905e1",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "4c5980fb-bc00-45d3-a214-9e7119c35035",
                            RoleId = "bfb7a4a0-f00f-4588-970d-7228eb0905e1"
                        },
                        new
                        {
                            UserId = "30cac737-b36f-4ff9-85f5-724a7f5c21f0",
                            RoleId = "b0f0bb29-0da5-41d0-8462-221076d62711"
                        },
                        new
                        {
                            UserId = "3b3a0523-1091-4e78-8a4f-1ed1a48690ca",
                            RoleId = "b0f0bb29-0da5-41d0-8462-221076d62711"
                        },
                        new
                        {
                            UserId = "24acb884-bafe-4b6f-b0cc-1170ce9a3c3a",
                            RoleId = "b0f0bb29-0da5-41d0-8462-221076d62711"
                        },
                        new
                        {
                            UserId = "5de277f0-1433-4f7a-b134-43c6267af9fd",
                            RoleId = "b0f0bb29-0da5-41d0-8462-221076d62711"
                        },
                        new
                        {
                            UserId = "5bd39b10-54e2-46e1-8743-75baa4c1a0b6",
                            RoleId = "b0f0bb29-0da5-41d0-8462-221076d62711"
                        },
                        new
                        {
                            UserId = "ff058804-d565-4d98-b968-151fd27538c1",
                            RoleId = "b0f0bb29-0da5-41d0-8462-221076d62711"
                        },
                        new
                        {
                            UserId = "d7271325-70a8-40a4-82e6-a727aaf94a00",
                            RoleId = "b0f0bb29-0da5-41d0-8462-221076d62711"
                        },
                        new
                        {
                            UserId = "e9d67325-24ac-43e2-a40c-e2e1bd396ad7",
                            RoleId = "b0f0bb29-0da5-41d0-8462-221076d62711"
                        },
                        new
                        {
                            UserId = "fa2b8e71-65fc-403b-9152-7a2ea73095c5",
                            RoleId = "b0f0bb29-0da5-41d0-8462-221076d62711"
                        },
                        new
                        {
                            UserId = "2a87e244-904a-49d8-abba-9928dcaa822a",
                            RoleId = "b0f0bb29-0da5-41d0-8462-221076d62711"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Faculty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PlaceOfBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "4c5980fb-bc00-45d3-a214-9e7119c35035",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "dc4061db-0db2-461a-990b-b7d3cafe7a7f",
                            DateOfBirth = new DateTime(2023, 4, 24, 9, 8, 29, 46, DateTimeKind.Local).AddTicks(2350),
                            Email = "admin@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Khoa học máy tính",
                            FullName = "Nguyễn Văn A",
                            Gender = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEDsa1qyJcOAoUD3gZPRFeuiKvdfJ8EAfx9trOrmXKNkZtJwn96bIpz84XXdkOFkcAQ==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "f1603023-0515-4daa-b6ff-35d82eed2450",
                            TwoFactorEnabled = false,
                            UserName = "admin@gmail.com"
                        },
                        new
                        {
                            Id = "30cac737-b36f-4ff9-85f5-724a7f5c21f0",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "10245187-844d-4f21-9a78-86db9db1df01",
                            DateOfBirth = new DateTime(2023, 4, 24, 9, 8, 29, 78, DateTimeKind.Local).AddTicks(2910),
                            Email = "user0@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_0",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER0@GMAIL.COM",
                            NormalizedUserName = "USER0@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEIyKmXNBXABu/dy0ZENFY3luX3BM3CIQG2u5s3gV1YZGO7btjAOepF0LdKKq3ba/oQ==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "b3535039-431f-4077-947d-8135a61030a0",
                            TwoFactorEnabled = false,
                            UserName = "user0@gmail.com"
                        },
                        new
                        {
                            Id = "3b3a0523-1091-4e78-8a4f-1ed1a48690ca",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "898b1ac4-58ea-4770-8503-94a1a0810045",
                            DateOfBirth = new DateTime(2023, 4, 24, 9, 8, 29, 112, DateTimeKind.Local).AddTicks(3520),
                            Email = "user1@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_1",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER1@GMAIL.COM",
                            NormalizedUserName = "USER1@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEL6FgyJbAJqLlE5RRl72AFnba8XpwEL2RYVkk+OmGl3Lzc+//8lDYgJc5U4om8Gu8g==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "9d201ef5-b0fe-4e30-af4a-d25dc9659ba9",
                            TwoFactorEnabled = false,
                            UserName = "user1@gmail.com"
                        },
                        new
                        {
                            Id = "24acb884-bafe-4b6f-b0cc-1170ce9a3c3a",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f7f8ae66-323b-417d-aeb4-04a18f3483a8",
                            DateOfBirth = new DateTime(2023, 4, 24, 9, 8, 29, 146, DateTimeKind.Local).AddTicks(1090),
                            Email = "user2@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_2",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER2@GMAIL.COM",
                            NormalizedUserName = "USER2@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEFlP+vIAubpoHGRgjOYqiFEr2A5r1L09jSxJKuchfVRMtTDo75muvFWcRvsbqQnLtA==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "7f060683-53ae-4dab-808e-7fa1aea2be93",
                            TwoFactorEnabled = false,
                            UserName = "user2@gmail.com"
                        },
                        new
                        {
                            Id = "5de277f0-1433-4f7a-b134-43c6267af9fd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "22f59cc1-cad3-497c-902e-f69573cbc110",
                            DateOfBirth = new DateTime(2023, 4, 24, 9, 8, 29, 179, DateTimeKind.Local).AddTicks(7960),
                            Email = "user3@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_3",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER3@GMAIL.COM",
                            NormalizedUserName = "USER3@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEA8osIDwyl+N4XJJWHanHI7UG6tZrR1h+gg1fd0/Xy+2saVDU/1CGXj2FMCG0J2Q3Q==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "cd58bbba-17c1-4bdb-bfff-13100736044f",
                            TwoFactorEnabled = false,
                            UserName = "user3@gmail.com"
                        },
                        new
                        {
                            Id = "5bd39b10-54e2-46e1-8743-75baa4c1a0b6",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d210938c-9aa2-4f54-8532-7104d48a1ff7",
                            DateOfBirth = new DateTime(2023, 4, 24, 9, 8, 29, 213, DateTimeKind.Local).AddTicks(920),
                            Email = "user4@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_4",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER4@GMAIL.COM",
                            NormalizedUserName = "USER4@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEGwvEK8CVEQMjqfAzWqwmgQElsjCR7alKCeGvf3rlqc8b4qhfzIh//rY3X72gTvAqg==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "6aaa1e89-bb57-4d53-9d09-27b5bf127d00",
                            TwoFactorEnabled = false,
                            UserName = "user4@gmail.com"
                        },
                        new
                        {
                            Id = "ff058804-d565-4d98-b968-151fd27538c1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cd62d077-737c-4e7e-a960-5bd644ce6367",
                            DateOfBirth = new DateTime(2023, 4, 24, 9, 8, 29, 245, DateTimeKind.Local).AddTicks(6080),
                            Email = "user5@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_5",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER5@GMAIL.COM",
                            NormalizedUserName = "USER5@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEL07ZBWif2YmUEheGLEvRQFO/Csq1h2D2kd3nQcEtE/y//SRtAnXEzaCYNuwiluSOQ==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "f5cefe18-9728-44a3-80f8-cfb5b4b8d57e",
                            TwoFactorEnabled = false,
                            UserName = "user5@gmail.com"
                        },
                        new
                        {
                            Id = "d7271325-70a8-40a4-82e6-a727aaf94a00",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7e8b0e30-2248-43e1-adab-87b518757401",
                            DateOfBirth = new DateTime(2023, 4, 24, 9, 8, 29, 278, DateTimeKind.Local).AddTicks(2240),
                            Email = "user6@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_6",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER6@GMAIL.COM",
                            NormalizedUserName = "USER6@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEEAJwyZjrCcB2Aw1lGToirLWd6NOTWnLhyly/ihDGYbSSFzVVugQ38AuoZ4B71hPVg==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "b0f204c1-2cd6-4e50-a768-43e4e966b1b8",
                            TwoFactorEnabled = false,
                            UserName = "user6@gmail.com"
                        },
                        new
                        {
                            Id = "e9d67325-24ac-43e2-a40c-e2e1bd396ad7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "87f31bcf-dd71-4b8d-b3bb-58cc68b4b123",
                            DateOfBirth = new DateTime(2023, 4, 24, 9, 8, 29, 312, DateTimeKind.Local).AddTicks(4000),
                            Email = "user7@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_7",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER7@GMAIL.COM",
                            NormalizedUserName = "USER7@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEIw64TXDITzAEF0fVeh+wQdic1sdkjQZvsCSsinlMz+cagXntBwdRu3fHJ3nzZLorg==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "e62ea805-8483-4451-a1bc-f2727fe06f6d",
                            TwoFactorEnabled = false,
                            UserName = "user7@gmail.com"
                        },
                        new
                        {
                            Id = "fa2b8e71-65fc-403b-9152-7a2ea73095c5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a14b4705-533a-470b-a380-709cc15c4001",
                            DateOfBirth = new DateTime(2023, 4, 24, 9, 8, 29, 347, DateTimeKind.Local).AddTicks(3810),
                            Email = "user8@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_8",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER8@GMAIL.COM",
                            NormalizedUserName = "USER8@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAENLIV5Li9DMeUM2M71YUXCo+86Ry8fsN9UFEVlNZfZgfExqP0fMmiW2FdqmOsohndQ==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "7c6b3729-6495-44e0-9f4e-30ba2caada9e",
                            TwoFactorEnabled = false,
                            UserName = "user8@gmail.com"
                        },
                        new
                        {
                            Id = "2a87e244-904a-49d8-abba-9928dcaa822a",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5ff296e1-e5ec-4692-923e-055873a1fc30",
                            DateOfBirth = new DateTime(2023, 4, 24, 9, 8, 29, 380, DateTimeKind.Local).AddTicks(7900),
                            Email = "user9@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_9",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER9@GMAIL.COM",
                            NormalizedUserName = "USER9@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEB0efFLPyf10gUAl/Ax67yppqeaOHnYRyXm9WKRO7RGa6K4ZMLOreZL9Il1lKF515g==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "d47ce50c-f4a1-4a4e-afa6-0e507d927e84",
                            TwoFactorEnabled = false,
                            UserName = "user9@gmail.com"
                        });
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Curriculum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Curriculums");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.EvalElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("Proportion")
                        .HasColumnType("int");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("EvalElements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 1,
                            Proportion = 20,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 2,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 2,
                            Proportion = 20,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 3,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 3,
                            Proportion = 20,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 4,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 4,
                            Proportion = 20,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 5,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 5,
                            Proportion = 20,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 6,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 1,
                            Proportion = 20,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 7,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 2,
                            Proportion = 20,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 8,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 3,
                            Proportion = 20,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 9,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 4,
                            Proportion = 20,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 10,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 5,
                            Proportion = 20,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 11,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 1,
                            Proportion = 20,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 12,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 2,
                            Proportion = 20,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 13,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 3,
                            Proportion = 20,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 14,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 4,
                            Proportion = 20,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 15,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 5,
                            Proportion = 20,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 16,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 1,
                            Proportion = 20,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 17,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 2,
                            Proportion = 20,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 18,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 3,
                            Proportion = 20,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 19,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 4,
                            Proportion = 20,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 20,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 5,
                            Proportion = 20,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 21,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 1,
                            Proportion = 20,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 22,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 2,
                            Proportion = 20,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 23,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 3,
                            Proportion = 20,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 24,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 4,
                            Proportion = 20,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 25,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 5,
                            Proportion = 20,
                            SubjectId = "0000005"
                        });
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Evaluate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Clo")
                        .HasColumnType("int");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("Proportion")
                        .HasColumnType("int");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Target")
                        .HasColumnType("int");

                    b.Property<string>("Test")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Evaluates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Clo = 1,
                            Method = "Thi viet",
                            Order = 1,
                            Proportion = 100,
                            SubjectId = "0000001",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 2,
                            Clo = 2,
                            Method = "Thi viet",
                            Order = 2,
                            Proportion = 100,
                            SubjectId = "0000001",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 3,
                            Clo = 3,
                            Method = "Thi viet",
                            Order = 3,
                            Proportion = 100,
                            SubjectId = "0000001",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 4,
                            Clo = 4,
                            Method = "Thi viet",
                            Order = 4,
                            Proportion = 100,
                            SubjectId = "0000001",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 5,
                            Clo = 5,
                            Method = "Thi viet",
                            Order = 5,
                            Proportion = 100,
                            SubjectId = "0000001",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 6,
                            Clo = 1,
                            Method = "Thi viet",
                            Order = 1,
                            Proportion = 100,
                            SubjectId = "0000002",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 7,
                            Clo = 2,
                            Method = "Thi viet",
                            Order = 2,
                            Proportion = 100,
                            SubjectId = "0000002",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 8,
                            Clo = 3,
                            Method = "Thi viet",
                            Order = 3,
                            Proportion = 100,
                            SubjectId = "0000002",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 9,
                            Clo = 4,
                            Method = "Thi viet",
                            Order = 4,
                            Proportion = 100,
                            SubjectId = "0000002",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 10,
                            Clo = 5,
                            Method = "Thi viet",
                            Order = 5,
                            Proportion = 100,
                            SubjectId = "0000002",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 11,
                            Clo = 1,
                            Method = "Thi viet",
                            Order = 1,
                            Proportion = 100,
                            SubjectId = "0000003",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 12,
                            Clo = 2,
                            Method = "Thi viet",
                            Order = 2,
                            Proportion = 100,
                            SubjectId = "0000003",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 13,
                            Clo = 3,
                            Method = "Thi viet",
                            Order = 3,
                            Proportion = 100,
                            SubjectId = "0000003",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 14,
                            Clo = 4,
                            Method = "Thi viet",
                            Order = 4,
                            Proportion = 100,
                            SubjectId = "0000003",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 15,
                            Clo = 5,
                            Method = "Thi viet",
                            Order = 5,
                            Proportion = 100,
                            SubjectId = "0000003",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 16,
                            Clo = 1,
                            Method = "Thi viet",
                            Order = 1,
                            Proportion = 100,
                            SubjectId = "0000004",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 17,
                            Clo = 2,
                            Method = "Thi viet",
                            Order = 2,
                            Proportion = 100,
                            SubjectId = "0000004",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 18,
                            Clo = 3,
                            Method = "Thi viet",
                            Order = 3,
                            Proportion = 100,
                            SubjectId = "0000004",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 19,
                            Clo = 4,
                            Method = "Thi viet",
                            Order = 4,
                            Proportion = 100,
                            SubjectId = "0000004",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 20,
                            Clo = 5,
                            Method = "Thi viet",
                            Order = 5,
                            Proportion = 100,
                            SubjectId = "0000004",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 21,
                            Clo = 1,
                            Method = "Thi viet",
                            Order = 1,
                            Proportion = 100,
                            SubjectId = "0000005",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 22,
                            Clo = 2,
                            Method = "Thi viet",
                            Order = 2,
                            Proportion = 100,
                            SubjectId = "0000005",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 23,
                            Clo = 3,
                            Method = "Thi viet",
                            Order = 3,
                            Proportion = 100,
                            SubjectId = "0000005",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 24,
                            Clo = 4,
                            Method = "Thi viet",
                            Order = 4,
                            Proportion = 100,
                            SubjectId = "0000005",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 25,
                            Clo = 5,
                            Method = "Thi viet",
                            Order = 5,
                            Proportion = 100,
                            SubjectId = "0000005",
                            Target = 75,
                            Test = "Bai kiem tra"
                        });
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Semester", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Semesters");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Subject", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("A")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Abstract")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("B")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("C")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Documents")
                        .HasColumnType("text");

                    b.Property<string>("Goals")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Other")
                        .HasColumnType("text");

                    b.Property<int>("PracticeCredits")
                        .HasColumnType("int");

                    b.Property<int>("SelfLearningCredits")
                        .HasColumnType("int");

                    b.Property<string>("Teachers")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TheoryCredits")
                        .HasColumnType("int");

                    b.Property<int>("TotalCredits")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = "0000001",
                            Abstract = "Day la phan tom tat hoc phan",
                            Documents = "Tai lieu 1\nTai Lieu 2\nTai Lieu 3",
                            Goals = "Muc tieu 1\nMuc tieu 2\nMuc tieu 3",
                            Name = "Subject 1",
                            PracticeCredits = 0,
                            SelfLearningCredits = 0,
                            Teachers = "Teacher 1\nTeacher 2\nTeacher3",
                            TheoryCredits = 0,
                            TotalCredits = 0
                        },
                        new
                        {
                            Id = "0000002",
                            Abstract = "Day la phan tom tat hoc phan",
                            Documents = "Tai lieu 1\nTai Lieu 2\nTai Lieu 3",
                            Goals = "Muc tieu 1\nMuc tieu 2\nMuc tieu 3",
                            Name = "Subject 2",
                            PracticeCredits = 0,
                            SelfLearningCredits = 0,
                            Teachers = "Teacher 1\nTeacher 2\nTeacher3",
                            TheoryCredits = 0,
                            TotalCredits = 0
                        },
                        new
                        {
                            Id = "0000003",
                            Abstract = "Day la phan tom tat hoc phan",
                            Documents = "Tai lieu 1\nTai Lieu 2\nTai Lieu 3",
                            Goals = "Muc tieu 1\nMuc tieu 2\nMuc tieu 3",
                            Name = "Subject 3",
                            PracticeCredits = 0,
                            SelfLearningCredits = 0,
                            Teachers = "Teacher 1\nTeacher 2\nTeacher3",
                            TheoryCredits = 0,
                            TotalCredits = 0
                        },
                        new
                        {
                            Id = "0000004",
                            Abstract = "Day la phan tom tat hoc phan",
                            Documents = "Tai lieu 1\nTai Lieu 2\nTai Lieu 3",
                            Goals = "Muc tieu 1\nMuc tieu 2\nMuc tieu 3",
                            Name = "Subject 4",
                            PracticeCredits = 0,
                            SelfLearningCredits = 0,
                            Teachers = "Teacher 1\nTeacher 2\nTeacher3",
                            TheoryCredits = 0,
                            TotalCredits = 0
                        },
                        new
                        {
                            Id = "0000005",
                            Abstract = "Day la phan tom tat hoc phan",
                            Documents = "Tai lieu 1\nTai Lieu 2\nTai Lieu 3",
                            Goals = "Muc tieu 1\nMuc tieu 2\nMuc tieu 3",
                            Name = "Subject 5",
                            PracticeCredits = 0,
                            SelfLearningCredits = 0,
                            Teachers = "Teacher 1\nTeacher 2\nTeacher3",
                            TheoryCredits = 0,
                            TotalCredits = 0
                        });
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bonus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Clos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NLessons")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("SubjectContents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 1,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 2,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 2,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 3,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 3,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 4,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 4,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 5,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 5,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 6,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 1,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 7,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 2,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 8,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 3,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 9,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 4,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 10,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 5,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 11,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 1,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 12,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 2,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 13,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 3,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 14,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 4,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 15,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 5,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 16,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 1,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 17,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 2,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 18,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 3,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 19,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 4,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 20,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 5,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 21,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 1,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 22,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 2,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 23,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 3,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 24,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 4,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 25,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 5,
                            SubjectId = "0000005"
                        });
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectCurriculum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CurriculumId")
                        .HasColumnType("int");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CurriculumId");

                    b.HasIndex("SemesterId");

                    b.HasIndex("SubjectId");

                    b.ToTable("SubjectCurriculums");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectOutputStandard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Clo")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoPerPi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("SubjectOutputStandards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Clo = 1,
                            Content = "Dau ra 1",
                            SoPerPi = "Text",
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 2,
                            Clo = 2,
                            Content = "Dau ra 2",
                            SoPerPi = "Text",
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 3,
                            Clo = 3,
                            Content = "Dau ra 3",
                            SoPerPi = "Text",
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 4,
                            Clo = 4,
                            Content = "Dau ra 4",
                            SoPerPi = "Text",
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 5,
                            Clo = 5,
                            Content = "Dau ra 5",
                            SoPerPi = "Text",
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 6,
                            Clo = 1,
                            Content = "Dau ra 1",
                            SoPerPi = "Text",
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 7,
                            Clo = 2,
                            Content = "Dau ra 2",
                            SoPerPi = "Text",
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 8,
                            Clo = 3,
                            Content = "Dau ra 3",
                            SoPerPi = "Text",
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 9,
                            Clo = 4,
                            Content = "Dau ra 4",
                            SoPerPi = "Text",
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 10,
                            Clo = 5,
                            Content = "Dau ra 5",
                            SoPerPi = "Text",
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 11,
                            Clo = 1,
                            Content = "Dau ra 1",
                            SoPerPi = "Text",
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 12,
                            Clo = 2,
                            Content = "Dau ra 2",
                            SoPerPi = "Text",
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 13,
                            Clo = 3,
                            Content = "Dau ra 3",
                            SoPerPi = "Text",
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 14,
                            Clo = 4,
                            Content = "Dau ra 4",
                            SoPerPi = "Text",
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 15,
                            Clo = 5,
                            Content = "Dau ra 5",
                            SoPerPi = "Text",
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 16,
                            Clo = 1,
                            Content = "Dau ra 1",
                            SoPerPi = "Text",
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 17,
                            Clo = 2,
                            Content = "Dau ra 2",
                            SoPerPi = "Text",
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 18,
                            Clo = 3,
                            Content = "Dau ra 3",
                            SoPerPi = "Text",
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 19,
                            Clo = 4,
                            Content = "Dau ra 4",
                            SoPerPi = "Text",
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 20,
                            Clo = 5,
                            Content = "Dau ra 5",
                            SoPerPi = "Text",
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 21,
                            Clo = 1,
                            Content = "Dau ra 1",
                            SoPerPi = "Text",
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 22,
                            Clo = 2,
                            Content = "Dau ra 2",
                            SoPerPi = "Text",
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 23,
                            Clo = 3,
                            Content = "Dau ra 3",
                            SoPerPi = "Text",
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 24,
                            Clo = 4,
                            Content = "Dau ra 4",
                            SoPerPi = "Text",
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 25,
                            Clo = 5,
                            Content = "Dau ra 5",
                            SoPerPi = "Text",
                            SubjectId = "0000005"
                        });
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.HasIndex("UserId");

                    b.ToTable("SubjectUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebDeCuong.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.EvalElement", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.Subject", "Subject")
                        .WithMany("EvalElements")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Evaluate", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.Subject", "Subject")
                        .WithMany("Evaluates")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectContent", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.Subject", "Subject")
                        .WithMany("SubjectContents")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectCurriculum", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.Curriculum", "Curriculum")
                        .WithMany("SubjectCurriculum")
                        .HasForeignKey("CurriculumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebDeCuong.Data.Entities.Semester", "Semester")
                        .WithMany("SubjectCurriculum")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebDeCuong.Data.Entities.Subject", "Subject")
                        .WithMany("SubjectCurriculum")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curriculum");

                    b.Navigation("Semester");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectOutputStandard", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.Subject", "Subject")
                        .WithMany("SubjectOutputStandards")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectUser", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.Subject", "Subject")
                        .WithMany("SubjectUsers")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebDeCuong.Data.Entities.ApplicationUser", "User")
                        .WithMany("SubjectUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.ApplicationUser", b =>
                {
                    b.Navigation("SubjectUsers");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Curriculum", b =>
                {
                    b.Navigation("SubjectCurriculum");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Semester", b =>
                {
                    b.Navigation("SubjectCurriculum");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Subject", b =>
                {
                    b.Navigation("EvalElements");

                    b.Navigation("Evaluates");

                    b.Navigation("SubjectContents");

                    b.Navigation("SubjectCurriculum");

                    b.Navigation("SubjectOutputStandards");

                    b.Navigation("SubjectUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
