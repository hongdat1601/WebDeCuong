// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebDeCuong.Data;

#nullable disable

namespace WebDeCuong.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230423040956_SeedDataSubject")]
    partial class SeedDataSubject
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "677e3afa-1d6c-469a-9dd3-47888370dc92",
                            ConcurrencyStamp = "677e3afa-1d6c-469a-9dd3-47888370dc92",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "fe9d8ca0-ca06-4ea4-b651-c07d1da7e7d3",
                            ConcurrencyStamp = "fe9d8ca0-ca06-4ea4-b651-c07d1da7e7d3",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "4cda32b1-7310-40e4-9512-31adfd0452ff",
                            RoleId = "fe9d8ca0-ca06-4ea4-b651-c07d1da7e7d3"
                        },
                        new
                        {
                            UserId = "bd52980f-041a-4757-9fad-b79857756d1b",
                            RoleId = "677e3afa-1d6c-469a-9dd3-47888370dc92"
                        },
                        new
                        {
                            UserId = "7ab4d702-3bbf-4774-bdea-5e440e73586b",
                            RoleId = "677e3afa-1d6c-469a-9dd3-47888370dc92"
                        },
                        new
                        {
                            UserId = "ac73d120-517c-4c7a-82ac-0be762e3f790",
                            RoleId = "677e3afa-1d6c-469a-9dd3-47888370dc92"
                        },
                        new
                        {
                            UserId = "ed4bab8a-8b8f-4a78-af47-09d1f933e0fb",
                            RoleId = "677e3afa-1d6c-469a-9dd3-47888370dc92"
                        },
                        new
                        {
                            UserId = "f26af492-de43-4c05-bc7e-6fafe55ef06a",
                            RoleId = "677e3afa-1d6c-469a-9dd3-47888370dc92"
                        },
                        new
                        {
                            UserId = "f5b13fa8-3b2f-4b01-a12c-873d85ec7d7e",
                            RoleId = "677e3afa-1d6c-469a-9dd3-47888370dc92"
                        },
                        new
                        {
                            UserId = "bd639d64-5e26-46c2-93eb-d50ee3f404aa",
                            RoleId = "677e3afa-1d6c-469a-9dd3-47888370dc92"
                        },
                        new
                        {
                            UserId = "e5bb027d-f6d8-4256-bcaf-7d768c43a2ba",
                            RoleId = "677e3afa-1d6c-469a-9dd3-47888370dc92"
                        },
                        new
                        {
                            UserId = "794998d9-86f4-4474-95a5-69062d6c9c96",
                            RoleId = "677e3afa-1d6c-469a-9dd3-47888370dc92"
                        },
                        new
                        {
                            UserId = "8e1ef777-d494-4866-ba93-e6673f5fe786",
                            RoleId = "677e3afa-1d6c-469a-9dd3-47888370dc92"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Faculty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PlaceOfBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "4cda32b1-7310-40e4-9512-31adfd0452ff",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c0dd8745-e46d-4ce2-b582-3b753cf8a33b",
                            DateOfBirth = new DateTime(2023, 4, 23, 11, 9, 54, 978, DateTimeKind.Local).AddTicks(4456),
                            Email = "admin@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Khoa học máy tính",
                            FullName = "Nguyễn Văn A",
                            Gender = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAECeT69az2+Xyg2hQA+BmiiwLXg2W4/fh9svfzNyaCthPM08/GV9Wo5gYuk1zyuQftw==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "a70bf647-2a88-4266-ae3e-b6327c533bc4",
                            TwoFactorEnabled = false,
                            UserName = "admin@gmail.com"
                        },
                        new
                        {
                            Id = "bd52980f-041a-4757-9fad-b79857756d1b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cd424021-d729-49f3-9fc9-9d1b501f6169",
                            DateOfBirth = new DateTime(2023, 4, 23, 11, 9, 55, 68, DateTimeKind.Local).AddTicks(3627),
                            Email = "user0@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_0",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER0@GMAIL.COM",
                            NormalizedUserName = "USER0@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEDMEvc+cvC2mlu2McmgO/3wEmHhe5+va6BTFP2GHqU7hB0OAN1Hx8oZO2QIkKLKmiw==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "bd78e0ee-38be-42b6-848f-0a892aa0b461",
                            TwoFactorEnabled = false,
                            UserName = "user0@gmail.com"
                        },
                        new
                        {
                            Id = "7ab4d702-3bbf-4774-bdea-5e440e73586b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "306ccf8c-c6d6-40fc-acd1-afaf44e59722",
                            DateOfBirth = new DateTime(2023, 4, 23, 11, 9, 55, 166, DateTimeKind.Local).AddTicks(7134),
                            Email = "user1@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_1",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER1@GMAIL.COM",
                            NormalizedUserName = "USER1@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEHgsAVFNgECRrIlyw+vdOuxKB/kMnIxsMU7IfIN9+RDedjBGKROD+SuOBR8oXQlCpg==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "b1dd3a9a-a957-43e6-adb7-0886d8bfd88a",
                            TwoFactorEnabled = false,
                            UserName = "user1@gmail.com"
                        },
                        new
                        {
                            Id = "ac73d120-517c-4c7a-82ac-0be762e3f790",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c730f0ea-f8f3-4b61-a6a3-b53ce4fbce3b",
                            DateOfBirth = new DateTime(2023, 4, 23, 11, 9, 55, 264, DateTimeKind.Local).AddTicks(3617),
                            Email = "user2@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_2",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER2@GMAIL.COM",
                            NormalizedUserName = "USER2@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAELbr18nsuBuCLFkReReflepfQQpT9vJKen/EFLldrUHAjZ07QK3PJhRvQhZQiaOlWA==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "3553203c-7f1c-4a39-8d3a-8b271e3369cb",
                            TwoFactorEnabled = false,
                            UserName = "user2@gmail.com"
                        },
                        new
                        {
                            Id = "ed4bab8a-8b8f-4a78-af47-09d1f933e0fb",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a0edace9-672a-405b-9db5-8cc1b47c48ce",
                            DateOfBirth = new DateTime(2023, 4, 23, 11, 9, 55, 365, DateTimeKind.Local).AddTicks(3155),
                            Email = "user3@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_3",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER3@GMAIL.COM",
                            NormalizedUserName = "USER3@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJMlZtqrFXsIxdBAfh8XteYuHZ6UxQ+x/ATEJSQ5HMYxI7gg3x4+4yOSf8POOPngEg==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "7685a2de-ceee-45fd-beb1-fa5d4abac250",
                            TwoFactorEnabled = false,
                            UserName = "user3@gmail.com"
                        },
                        new
                        {
                            Id = "f26af492-de43-4c05-bc7e-6fafe55ef06a",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b78105d1-b169-475a-98fd-ab07a678871e",
                            DateOfBirth = new DateTime(2023, 4, 23, 11, 9, 55, 467, DateTimeKind.Local).AddTicks(3044),
                            Email = "user4@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_4",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER4@GMAIL.COM",
                            NormalizedUserName = "USER4@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEOSIarA3unF6OPPPijv+xaBp+8PvC/1y1vrN5L+gyEt3EhouodnS8wmLvL/93kZJBQ==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "6d47bb1d-558b-4968-b717-d6eba822c473",
                            TwoFactorEnabled = false,
                            UserName = "user4@gmail.com"
                        },
                        new
                        {
                            Id = "f5b13fa8-3b2f-4b01-a12c-873d85ec7d7e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "579a0368-879f-4f25-930e-2422604acc9e",
                            DateOfBirth = new DateTime(2023, 4, 23, 11, 9, 55, 579, DateTimeKind.Local).AddTicks(7353),
                            Email = "user5@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_5",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER5@GMAIL.COM",
                            NormalizedUserName = "USER5@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEL6iw2OPakmmsymZK0Yx0mtghxqjTXR5zI/Sb19DehTGKx/6bSXx+A5CoGX/EPQOdA==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "95f4f83b-4475-499f-9d9c-bbba929ac5c1",
                            TwoFactorEnabled = false,
                            UserName = "user5@gmail.com"
                        },
                        new
                        {
                            Id = "bd639d64-5e26-46c2-93eb-d50ee3f404aa",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4dbe681e-5156-46ee-be16-a31619d90516",
                            DateOfBirth = new DateTime(2023, 4, 23, 11, 9, 55, 680, DateTimeKind.Local).AddTicks(5326),
                            Email = "user6@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_6",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER6@GMAIL.COM",
                            NormalizedUserName = "USER6@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEHC7PcOrGmBPTBvU2VfxwRHh8wxKwfgaxBaF4yXhrpx7wYMQln2Ud7pouByYtwTMAg==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "99a3cce8-1c70-4f7a-b3d1-7a99de37d289",
                            TwoFactorEnabled = false,
                            UserName = "user6@gmail.com"
                        },
                        new
                        {
                            Id = "e5bb027d-f6d8-4256-bcaf-7d768c43a2ba",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a468fa52-67c5-4fb5-8332-0cc699a70458",
                            DateOfBirth = new DateTime(2023, 4, 23, 11, 9, 55, 783, DateTimeKind.Local).AddTicks(6675),
                            Email = "user7@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_7",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER7@GMAIL.COM",
                            NormalizedUserName = "USER7@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEO+6JYMsSQnwh+YMRwmUGxZsbTVSwt/f/II5wQwLh1iodDhogRgsbXM/K0+OOYwpYg==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "a1b1a56f-1b66-4cf7-a0c2-e28585c85ecb",
                            TwoFactorEnabled = false,
                            UserName = "user7@gmail.com"
                        },
                        new
                        {
                            Id = "794998d9-86f4-4474-95a5-69062d6c9c96",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e4b5d661-c6f9-4ee1-b2ad-a66569175267",
                            DateOfBirth = new DateTime(2023, 4, 23, 11, 9, 55, 891, DateTimeKind.Local).AddTicks(7449),
                            Email = "user8@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_8",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER8@GMAIL.COM",
                            NormalizedUserName = "USER8@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEFpbmJ23lywVsMCzujWpL5BfpR0h0t/NFyfnkd+S9vuKZjfrX72ECloM1F2XlxQ1hA==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "2c3f81ab-51d2-4591-af9e-b989e6583e73",
                            TwoFactorEnabled = false,
                            UserName = "user8@gmail.com"
                        },
                        new
                        {
                            Id = "8e1ef777-d494-4866-ba93-e6673f5fe786",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7571a76d-0de7-402d-a9db-8c1818f5ffb9",
                            DateOfBirth = new DateTime(2023, 4, 23, 11, 9, 55, 983, DateTimeKind.Local).AddTicks(5493),
                            Email = "user9@gmail.com",
                            EmailConfirmed = false,
                            Faculty = "Công nghệ thông tin",
                            FullName = "Nguyễn Thị B_9",
                            Gender = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER9@GMAIL.COM",
                            NormalizedUserName = "USER9@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEA4ABQxkiPQ54CKlM91myTAYAvvn7r3jzcx6D7Ra7hwtuU76dqqdZ9zSC3yrxs4stw==",
                            PhoneNumber = "0900000000",
                            PhoneNumberConfirmed = false,
                            PlaceOfBirth = "TP.HCM",
                            SecurityStamp = "69032fb9-c62a-49c9-b807-9d8201c0813a",
                            TwoFactorEnabled = false,
                            UserName = "user9@gmail.com"
                        });
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.EvalElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("Proportion")
                        .HasColumnType("int");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("EvalElements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 1,
                            Proportion = 20,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 2,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 2,
                            Proportion = 20,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 3,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 3,
                            Proportion = 20,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 4,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 4,
                            Proportion = 20,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 5,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 5,
                            Proportion = 20,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 6,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 1,
                            Proportion = 20,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 7,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 2,
                            Proportion = 20,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 8,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 3,
                            Proportion = 20,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 9,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 4,
                            Proportion = 20,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 10,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 5,
                            Proportion = 20,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 11,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 1,
                            Proportion = 20,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 12,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 2,
                            Proportion = 20,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 13,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 3,
                            Proportion = 20,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 14,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 4,
                            Proportion = 20,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 15,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 5,
                            Proportion = 20,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 16,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 1,
                            Proportion = 20,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 17,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 2,
                            Proportion = 20,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 18,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 3,
                            Proportion = 20,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 19,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 4,
                            Proportion = 20,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 20,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 5,
                            Proportion = 20,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 21,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 1,
                            Proportion = 20,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 22,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 2,
                            Proportion = 20,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 23,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 3,
                            Proportion = 20,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 24,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 4,
                            Proportion = 20,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 25,
                            Method = "Kiem tra",
                            Name = "Ly thuyet",
                            Order = 5,
                            Proportion = 20,
                            SubjectId = "0000005"
                        });
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Evaluate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Clo")
                        .HasColumnType("int");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("Proportion")
                        .HasColumnType("int");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Target")
                        .HasColumnType("int");

                    b.Property<string>("Test")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Evaluates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Clo = 1,
                            Method = "Thi viet",
                            Order = 1,
                            Proportion = 100,
                            SubjectId = "0000001",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 2,
                            Clo = 2,
                            Method = "Thi viet",
                            Order = 2,
                            Proportion = 100,
                            SubjectId = "0000001",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 3,
                            Clo = 3,
                            Method = "Thi viet",
                            Order = 3,
                            Proportion = 100,
                            SubjectId = "0000001",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 4,
                            Clo = 4,
                            Method = "Thi viet",
                            Order = 4,
                            Proportion = 100,
                            SubjectId = "0000001",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 5,
                            Clo = 5,
                            Method = "Thi viet",
                            Order = 5,
                            Proportion = 100,
                            SubjectId = "0000001",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 6,
                            Clo = 1,
                            Method = "Thi viet",
                            Order = 1,
                            Proportion = 100,
                            SubjectId = "0000002",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 7,
                            Clo = 2,
                            Method = "Thi viet",
                            Order = 2,
                            Proportion = 100,
                            SubjectId = "0000002",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 8,
                            Clo = 3,
                            Method = "Thi viet",
                            Order = 3,
                            Proportion = 100,
                            SubjectId = "0000002",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 9,
                            Clo = 4,
                            Method = "Thi viet",
                            Order = 4,
                            Proportion = 100,
                            SubjectId = "0000002",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 10,
                            Clo = 5,
                            Method = "Thi viet",
                            Order = 5,
                            Proportion = 100,
                            SubjectId = "0000002",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 11,
                            Clo = 1,
                            Method = "Thi viet",
                            Order = 1,
                            Proportion = 100,
                            SubjectId = "0000003",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 12,
                            Clo = 2,
                            Method = "Thi viet",
                            Order = 2,
                            Proportion = 100,
                            SubjectId = "0000003",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 13,
                            Clo = 3,
                            Method = "Thi viet",
                            Order = 3,
                            Proportion = 100,
                            SubjectId = "0000003",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 14,
                            Clo = 4,
                            Method = "Thi viet",
                            Order = 4,
                            Proportion = 100,
                            SubjectId = "0000003",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 15,
                            Clo = 5,
                            Method = "Thi viet",
                            Order = 5,
                            Proportion = 100,
                            SubjectId = "0000003",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 16,
                            Clo = 1,
                            Method = "Thi viet",
                            Order = 1,
                            Proportion = 100,
                            SubjectId = "0000004",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 17,
                            Clo = 2,
                            Method = "Thi viet",
                            Order = 2,
                            Proportion = 100,
                            SubjectId = "0000004",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 18,
                            Clo = 3,
                            Method = "Thi viet",
                            Order = 3,
                            Proportion = 100,
                            SubjectId = "0000004",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 19,
                            Clo = 4,
                            Method = "Thi viet",
                            Order = 4,
                            Proportion = 100,
                            SubjectId = "0000004",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 20,
                            Clo = 5,
                            Method = "Thi viet",
                            Order = 5,
                            Proportion = 100,
                            SubjectId = "0000004",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 21,
                            Clo = 1,
                            Method = "Thi viet",
                            Order = 1,
                            Proportion = 100,
                            SubjectId = "0000005",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 22,
                            Clo = 2,
                            Method = "Thi viet",
                            Order = 2,
                            Proportion = 100,
                            SubjectId = "0000005",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 23,
                            Clo = 3,
                            Method = "Thi viet",
                            Order = 3,
                            Proportion = 100,
                            SubjectId = "0000005",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 24,
                            Clo = 4,
                            Method = "Thi viet",
                            Order = 4,
                            Proportion = 100,
                            SubjectId = "0000005",
                            Target = 75,
                            Test = "Bai kiem tra"
                        },
                        new
                        {
                            Id = 25,
                            Clo = 5,
                            Method = "Thi viet",
                            Order = 5,
                            Proportion = 100,
                            SubjectId = "0000005",
                            Target = 75,
                            Test = "Bai kiem tra"
                        });
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Subject", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("A")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Abstract")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("B")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("C")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Documents")
                        .HasColumnType("text");

                    b.Property<string>("Goals")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Other")
                        .HasColumnType("text");

                    b.Property<int>("PracticeCredits")
                        .HasColumnType("int");

                    b.Property<int>("SelfLearningCredits")
                        .HasColumnType("int");

                    b.Property<string>("Teachers")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TheoryCredits")
                        .HasColumnType("int");

                    b.Property<int>("TotalCredits")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = "0000001",
                            Abstract = "Day la phan tom tat hoc phan",
                            Documents = "Tai lieu 1\nTai Lieu 2\nTai Lieu 3",
                            Goals = "Muc tieu 1\nMuc tieu 2\nMuc tieu 3",
                            Name = "Subject 1",
                            PracticeCredits = 0,
                            SelfLearningCredits = 0,
                            Teachers = "Teacher 1\nTeacher 2\nTeacher3",
                            TheoryCredits = 0,
                            TotalCredits = 0
                        },
                        new
                        {
                            Id = "0000002",
                            Abstract = "Day la phan tom tat hoc phan",
                            Documents = "Tai lieu 1\nTai Lieu 2\nTai Lieu 3",
                            Goals = "Muc tieu 1\nMuc tieu 2\nMuc tieu 3",
                            Name = "Subject 2",
                            PracticeCredits = 0,
                            SelfLearningCredits = 0,
                            Teachers = "Teacher 1\nTeacher 2\nTeacher3",
                            TheoryCredits = 0,
                            TotalCredits = 0
                        },
                        new
                        {
                            Id = "0000003",
                            Abstract = "Day la phan tom tat hoc phan",
                            Documents = "Tai lieu 1\nTai Lieu 2\nTai Lieu 3",
                            Goals = "Muc tieu 1\nMuc tieu 2\nMuc tieu 3",
                            Name = "Subject 3",
                            PracticeCredits = 0,
                            SelfLearningCredits = 0,
                            Teachers = "Teacher 1\nTeacher 2\nTeacher3",
                            TheoryCredits = 0,
                            TotalCredits = 0
                        },
                        new
                        {
                            Id = "0000004",
                            Abstract = "Day la phan tom tat hoc phan",
                            Documents = "Tai lieu 1\nTai Lieu 2\nTai Lieu 3",
                            Goals = "Muc tieu 1\nMuc tieu 2\nMuc tieu 3",
                            Name = "Subject 4",
                            PracticeCredits = 0,
                            SelfLearningCredits = 0,
                            Teachers = "Teacher 1\nTeacher 2\nTeacher3",
                            TheoryCredits = 0,
                            TotalCredits = 0
                        },
                        new
                        {
                            Id = "0000005",
                            Abstract = "Day la phan tom tat hoc phan",
                            Documents = "Tai lieu 1\nTai Lieu 2\nTai Lieu 3",
                            Goals = "Muc tieu 1\nMuc tieu 2\nMuc tieu 3",
                            Name = "Subject 5",
                            PracticeCredits = 0,
                            SelfLearningCredits = 0,
                            Teachers = "Teacher 1\nTeacher 2\nTeacher3",
                            TheoryCredits = 0,
                            TotalCredits = 0
                        });
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bonus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Clos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NLessons")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("SubjectContents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 1,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 2,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 2,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 3,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 3,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 4,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 4,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 5,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 5,
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 6,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 1,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 7,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 2,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 8,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 3,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 9,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 4,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 10,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 5,
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 11,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 1,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 12,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 2,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 13,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 3,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 14,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 4,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 15,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 5,
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 16,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 1,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 17,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 2,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 18,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 3,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 19,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 4,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 20,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 5,
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 21,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 1,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 22,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 2,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 23,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 3,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 24,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 4,
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 25,
                            Clos = "1, 2, 3, 4, 5",
                            Content = "Subject Context",
                            Method = "L, D",
                            NLessons = 30,
                            Order = 5,
                            SubjectId = "0000005"
                        });
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectOutputStandard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Clo")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoPerPi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("SubjectOutputStandards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Clo = 1,
                            Content = "Dau ra 1",
                            SoPerPi = "Text",
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 2,
                            Clo = 2,
                            Content = "Dau ra 2",
                            SoPerPi = "Text",
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 3,
                            Clo = 3,
                            Content = "Dau ra 3",
                            SoPerPi = "Text",
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 4,
                            Clo = 4,
                            Content = "Dau ra 4",
                            SoPerPi = "Text",
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 5,
                            Clo = 5,
                            Content = "Dau ra 5",
                            SoPerPi = "Text",
                            SubjectId = "0000001"
                        },
                        new
                        {
                            Id = 6,
                            Clo = 1,
                            Content = "Dau ra 1",
                            SoPerPi = "Text",
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 7,
                            Clo = 2,
                            Content = "Dau ra 2",
                            SoPerPi = "Text",
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 8,
                            Clo = 3,
                            Content = "Dau ra 3",
                            SoPerPi = "Text",
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 9,
                            Clo = 4,
                            Content = "Dau ra 4",
                            SoPerPi = "Text",
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 10,
                            Clo = 5,
                            Content = "Dau ra 5",
                            SoPerPi = "Text",
                            SubjectId = "0000002"
                        },
                        new
                        {
                            Id = 11,
                            Clo = 1,
                            Content = "Dau ra 1",
                            SoPerPi = "Text",
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 12,
                            Clo = 2,
                            Content = "Dau ra 2",
                            SoPerPi = "Text",
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 13,
                            Clo = 3,
                            Content = "Dau ra 3",
                            SoPerPi = "Text",
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 14,
                            Clo = 4,
                            Content = "Dau ra 4",
                            SoPerPi = "Text",
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 15,
                            Clo = 5,
                            Content = "Dau ra 5",
                            SoPerPi = "Text",
                            SubjectId = "0000003"
                        },
                        new
                        {
                            Id = 16,
                            Clo = 1,
                            Content = "Dau ra 1",
                            SoPerPi = "Text",
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 17,
                            Clo = 2,
                            Content = "Dau ra 2",
                            SoPerPi = "Text",
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 18,
                            Clo = 3,
                            Content = "Dau ra 3",
                            SoPerPi = "Text",
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 19,
                            Clo = 4,
                            Content = "Dau ra 4",
                            SoPerPi = "Text",
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 20,
                            Clo = 5,
                            Content = "Dau ra 5",
                            SoPerPi = "Text",
                            SubjectId = "0000004"
                        },
                        new
                        {
                            Id = 21,
                            Clo = 1,
                            Content = "Dau ra 1",
                            SoPerPi = "Text",
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 22,
                            Clo = 2,
                            Content = "Dau ra 2",
                            SoPerPi = "Text",
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 23,
                            Clo = 3,
                            Content = "Dau ra 3",
                            SoPerPi = "Text",
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 24,
                            Clo = 4,
                            Content = "Dau ra 4",
                            SoPerPi = "Text",
                            SubjectId = "0000005"
                        },
                        new
                        {
                            Id = 25,
                            Clo = 5,
                            Content = "Dau ra 5",
                            SoPerPi = "Text",
                            SubjectId = "0000005"
                        });
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.HasIndex("UserId");

                    b.ToTable("SubjectUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebDeCuong.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.EvalElement", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.Subject", "Subject")
                        .WithMany("EvalElements")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Evaluate", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.Subject", "Subject")
                        .WithMany("Evaluates")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectContent", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.Subject", "Subject")
                        .WithMany("SubjectContents")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectOutputStandard", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.Subject", "Subject")
                        .WithMany("SubjectOutputStandards")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.SubjectUser", b =>
                {
                    b.HasOne("WebDeCuong.Data.Entities.Subject", "Subject")
                        .WithMany("SubjectUsers")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebDeCuong.Data.Entities.ApplicationUser", "User")
                        .WithMany("SubjectUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.ApplicationUser", b =>
                {
                    b.Navigation("SubjectUsers");
                });

            modelBuilder.Entity("WebDeCuong.Data.Entities.Subject", b =>
                {
                    b.Navigation("EvalElements");

                    b.Navigation("Evaluates");

                    b.Navigation("SubjectContents");

                    b.Navigation("SubjectOutputStandards");

                    b.Navigation("SubjectUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
